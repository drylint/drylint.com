(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{321:function(e,t,a){"use strict";a.r(t);var s=a(6),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"ts-配置之编译选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-配置之编译选项"}},[e._v("#")]),e._v(" TS 配置之编译选项")]),e._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#编译选项"}},[e._v("编译选项")]),a("ul",[a("li",[a("a",{attrs:{href:"#charset-输入文件的字符集编码-默认-utf8"}},[e._v("charset 输入文件的字符集编码，默认 'utf8'")])]),a("li",[a("a",{attrs:{href:"#composite-是否开启对项目引用的编译"}},[e._v("composite 是否开启对项目引用的编译")])]),a("li",[a("a",{attrs:{href:"#declaration-是否生成相应的-d-ts-文件"}},[e._v("declaration 是否生成相应的 d.ts 文件")])]),a("li",[a("a",{attrs:{href:"#declarationdir-指定-d-ts-声明文件的输出目录"}},[e._v("declarationDir 指定 .d.ts 声明文件的输出目录")])]),a("li",[a("a",{attrs:{href:"#diagnostics-是否显示诊断信息"}},[e._v("diagnostics 是否显示诊断信息")])]),a("li",[a("a",{attrs:{href:"#emitbom-是否在输出文件开头生成-byte-order-mark-头信息"}},[e._v("emitBOM 是否在输出文件开头生成 Byte Order Mark 头信息")])]),a("li",[a("a",{attrs:{href:"#emitdeclarationonly-是否只生成-d-ts-声明文件"}},[e._v("emitDeclarationOnly 是否只生成 .d.ts 声明文件")])]),a("li",[a("a",{attrs:{href:"#incremental-是否启用增量编译"}},[e._v("incremental 是否启用增量编译")])]),a("li",[a("a",{attrs:{href:"#tsbuildinfofile-指定一个文件名来保存增量编译信息"}},[e._v("tsBuildInfoFile 指定一个文件名来保存增量编译信息")])]),a("li",[a("a",{attrs:{href:"#inlinesourcemap-是否将-sourcemaps-生成在同一个文件中"}},[e._v("inlineSourceMap 是否将 sourcemaps 生成在同一个文件中")])]),a("li",[a("a",{attrs:{href:"#inlinesources-是否将-sourcemap-生成在独立文件中"}},[e._v("inlineSources 是否将 sourcemap 生成在独立文件中")])]),a("li",[a("a",{attrs:{href:"#jsx-指定-jsx-代码生成-在-tsx-中支持-jsx"}},[e._v("jsx 指定 jsx 代码生成，在 tsx 中支持 jsx")])]),a("li",[a("a",{attrs:{href:"#reactnamespace-已弃用-由-jsxfactory-选项代替"}},[e._v("reactNamespace 已弃用，由 jsxFactory 选项代替")])]),a("li",[a("a",{attrs:{href:"#listfiles-是否在编译过程中列出文件列表"}},[e._v("listFiles 是否在编译过程中列出文件列表")])]),a("li",[a("a",{attrs:{href:"#maproot-为-debugger-指定-sourcemap-文件的路径"}},[e._v("mapRoot 为 debugger 指定 sourcemap 文件的路径")])]),a("li",[a("a",{attrs:{href:"#module-指定生成哪个模块系统代码"}},[e._v("module 指定生成哪个模块系统代码")])]),a("li",[a("a",{attrs:{href:"#newline-指定行结束符是-crlf-lf"}},[e._v("newLine 指定行结束符是 'crlf' | 'lf'")])]),a("li",[a("a",{attrs:{href:"#noemit-是否不生成输出文件"}},[e._v("noEmit 是否不生成输出文件")])]),a("li",[a("a",{attrs:{href:"#noemithelpers-是否不在输出文件中生成用户自定义的帮助函数代码"}},[e._v("noEmitHelpers 是否不在输出文件中生成用户自定义的帮助函数代码")])]),a("li",[a("a",{attrs:{href:"#noemitonerror-是否在报错时不生成输出文件"}},[e._v("noEmitOnError 是否在报错时不生成输出文件")])]),a("li",[a("a",{attrs:{href:"#noimplicitany-是否禁止使用隐式-any-类型"}},[e._v("noImplicitAny 是否禁止使用隐式 any 类型")])]),a("li",[a("a",{attrs:{href:"#noimplicitthis-是否在-this-表达式的值为隐式-any-类型的时候报错"}},[e._v("noImplicitThis 是否在 this 表达式的值为隐式 any 类型的时候报错")])]),a("li",[a("a",{attrs:{href:"#nounusedlocals-是否在有未使用的局部变量时抛错"}},[e._v("noUnusedLocals 是否在有未使用的局部变量时抛错")])]),a("li",[a("a",{attrs:{href:"#nounusedparameters-是否在有未使用的参数时报错"}},[e._v("noUnusedParameters 是否在有未使用的参数时报错")])]),a("li",[a("a",{attrs:{href:"#nolib-是否不包含默认的库文件-lib-d-ts"}},[e._v("noLib 是否不包含默认的库文件 lib.d.ts")])]),a("li",[a("a",{attrs:{href:"#noresolve-是否不把-reference-或-模块导入的目标-加到已编译的文件列表中"}},[e._v("noResolve 是否不把 /// "),a("reference",[e._v(" 或 模块导入的目标 加到已编译的文件列表中")])],1)]),a("li",[a("a",{attrs:{href:"#nostrictgenericchecks-是否禁用在函数类型里对泛型签名进行严格检查"}},[e._v("noStrictGenericChecks 是否禁用在函数类型里对泛型签名进行严格检查")])]),a("li",[a("a",{attrs:{href:"#skipdefaultlibcheck-已弃用-是否忽略库的默认声明文件的类型检查"}},[e._v("skipDefaultLibCheck 已弃用，是否忽略库的默认声明文件的类型检查")])]),a("li",[a("a",{attrs:{href:"#skiplibcheck-是否忽略所有的声明文件-d-ts-的类型检查"}},[e._v("skipLibCheck 是否忽略所有的声明文件（ *.d.ts）的类型检查")])]),a("li",[a("a",{attrs:{href:"#outfile-指定将输出文件合并为一个文件"}},[e._v("outFile 指定将输出文件合并为一个文件")])]),a("li",[a("a",{attrs:{href:"#outdir-重定向输出结构目录"}},[e._v("outDir 重定向输出结构目录")])]),a("li",[a("a",{attrs:{href:"#preserveconstenums-是否在生成的代码中保留-const-enum-声明"}},[e._v("preserveConstEnums 是否在生成的代码中保留 const enum 声明")])]),a("li",[a("a",{attrs:{href:"#preservesymlinks-是否保留符号链接将其视为文件-不将它视为真实路径"}},[e._v("preserveSymlinks 是否保留符号链接将其视为文件，不将它视为真实路径")])]),a("li",[a("a",{attrs:{href:"#preservewatchoutput-是否保留-watch-模式下过时的控制台输出而不清屏"}},[e._v("preserveWatchOutput 是否保留 watch 模式下过时的控制台输出而不清屏")])]),a("li",[a("a",{attrs:{href:"#pretty-是否给错误和消息设置样式-使用颜色和上下文"}},[e._v("pretty 是否给错误和消息设置样式，使用颜色和上下文")])]),a("li",[a("a",{attrs:{href:"#removecomments-是否删除所有注释-除了以-开头的版权信息"}},[e._v("removeComments 是否删除所有注释，除了以 /!* 开头的版权信息")])]),a("li",[a("a",{attrs:{href:"#rootdir-指定输入文件的根目录来控制-outdir-选项的输出目录结构"}},[e._v("rootDir 指定输入文件的根目录来控制 outDir 选项的输出目录结构")])]),a("li",[a("a",{attrs:{href:"#isolatedmodules-是否无条件的为未解析的文件生成-imports"}},[e._v("isolatedModules 是否无条件的为未解析的文件生成 imports")])]),a("li",[a("a",{attrs:{href:"#sourcemap-是否生成相应的-map文件"}},[e._v("sourceMap 是否生成相应的 .map文件")])]),a("li",[a("a",{attrs:{href:"#sourceroot"}},[e._v("sourceRoot")])]),a("li",[a("a",{attrs:{href:"#suppressexcesspropertyerrors-是否禁止对对象字面量进行过多-额外-的属性检查"}},[e._v("suppressExcessPropertyErrors 是否禁止对对象字面量进行过多（额外）的属性检查")])]),a("li",[a("a",{attrs:{href:"#suppressimplicitanyindexerrors-是否阻止索引对象缺乏索引签名时的-noimplicitany-错误"}},[e._v("suppressImplicitAnyIndexErrors 是否阻止索引对象缺乏索引签名时的 noImplicitAny 错误")])]),a("li",[a("a",{attrs:{href:"#stripinternal-是否不对-internal-jsdoc注解的代码生成声明"}},[e._v("stripInternal 是否不对 /** @internal */ JSDoc注解的代码生成声明")])]),a("li",[a("a",{attrs:{href:"#target-指定ecmascript目标版本"}},[e._v("target 指定ECMAScript目标版本")])]),a("li",[a("a",{attrs:{href:"#watch-是否监听输入文件的改变-在它们改变时重新编译"}},[e._v("watch 是否监听输入文件的改变，在它们改变时重新编译")])]),a("li",[a("a",{attrs:{href:"#experimentaldecorators-是否启用对实验性的es7装饰器的支持"}},[e._v("experimentalDecorators 是否启用对实验性的ES7装饰器的支持")])]),a("li",[a("a",{attrs:{href:"#emitdecoratormetadata-是否给源码里的装饰器声明生成设计类型元数据"}},[e._v("emitDecoratorMetadata 是否给源码里的装饰器声明生成设计类型元数据")])]),a("li",[a("a",{attrs:{href:"#moduleresolution"}},[e._v("moduleResolution")])]),a("li",[a("a",{attrs:{href:"#allowunusedlabels-是否允许未使用标签存在-不报告未使用标签的错误"}},[e._v("allowUnusedLabels 是否允许未使用标签存在，不报告未使用标签的错误")])]),a("li",[a("a",{attrs:{href:"#noimplicitreturns-是否禁止函数的隐式返回值-若没有返回值时报错"}},[e._v("noImplicitReturns 是否禁止函数的隐式返回值，若没有返回值时报错")])]),a("li",[a("a",{attrs:{href:"#nofallthroughcasesinswitch-是否禁止在-switch-语句中出现-fallthrough-case-没有-break"}},[e._v("noFallthroughCasesInSwitch 是否禁止在 switch 语句中出现 fallthrough case（没有 break）")])]),a("li",[a("a",{attrs:{href:"#allowunreachablecode-是否允许出现死区代码-永远无法执行到达的代码"}},[e._v("allowUnreachableCode 是否允许出现死区代码（永远无法执行到达的代码）")])]),a("li",[a("a",{attrs:{href:"#forceconsistentcasinginfilenames-是否强制对同一文件使用一致的大小写引用"}},[e._v("forceConsistentCasingInFileNames 是否强制对同一文件使用一致的大小写引用")])]),a("li",[a("a",{attrs:{href:"#baseurl-指定解析非相对模块名的基准目录"}},[e._v("baseUrl 指定解析非相对模块名的基准目录")])]),a("li",[a("a",{attrs:{href:"#paths-指定要计算的相对于-baseurl-的路径映射"}},[e._v("paths 指定要计算的相对于 baseUrl 的路径映射")])]),a("li",[a("a",{attrs:{href:"#plugins-列出要加载的typescript语言服务器插件列表"}},[e._v("plugins 列出要加载的TypeScript语言服务器插件列表")])]),a("li",[a("a",{attrs:{href:"#rootdirs-指定解析模块时使用的根目录列表"}},[e._v("rootDirs 指定解析模块时使用的根目录列表")])]),a("li",[a("a",{attrs:{href:"#typeroots-指定要包含的类型声明文件的目录列表"}},[e._v("typeRoots 指定要包含的类型声明文件的目录列表")])]),a("li",[a("a",{attrs:{href:"#types-指定编译中包含的类型声明文件"}},[e._v("types 指定编译中包含的类型声明文件")])]),a("li",[a("a",{attrs:{href:"#traceresolution-是否启用名称解析过程的跟踪-报告模块解析日志消息"}},[e._v("traceResolution 是否启用名称解析过程的跟踪，报告模块解析日志消息")])]),a("li",[a("a",{attrs:{href:"#allowjs-是否允许编译-javascript-文件"}},[e._v("allowJs 是否允许编译 javascript 文件")])]),a("li",[a("a",{attrs:{href:"#noerrortruncation-是否不截断错误消息"}},[e._v("noErrorTruncation 是否不截断错误消息")])]),a("li",[a("a",{attrs:{href:"#allowsyntheticdefaultimports-是否允许从没有设置默认导出的模块中默认导入"}},[e._v("allowSyntheticDefaultImports 是否允许从没有设置默认导出的模块中默认导入")])]),a("li",[a("a",{attrs:{href:"#noimplicitusestrict-是否在模块输出中不输出-use-strict-指令"}},[e._v('noImplicitUseStrict 是否在模块输出中不输出 "use strict" 指令')])]),a("li",[a("a",{attrs:{href:"#listemittedfiles-是否列出所有编译生成的文件名"}},[e._v("listEmittedFiles 是否列出所有编译生成的文件名")])]),a("li",[a("a",{attrs:{href:"#disablesizelimit-是否禁用-javascript-项目的大小限制"}},[e._v("disableSizeLimit 是否禁用 JavaScript 项目的大小限制")])]),a("li",[a("a",{attrs:{href:"#lib-指定编译过程中需要包含的库文件的列表"}},[e._v("lib 指定编译过程中需要包含的库文件的列表")])]),a("li",[a("a",{attrs:{href:"#strictnullchecks-是否开启严格的-null-检查模式"}},[e._v("strictNullChecks 是否开启严格的 null 检查模式")])]),a("li",[a("a",{attrs:{href:"#maxnodemodulejsdepth"}},[e._v("maxNodeModuleJsDepth")])]),a("li",[a("a",{attrs:{href:"#importhelpers"}},[e._v("importHelpers")])]),a("li",[a("a",{attrs:{href:"#importsnotusedasvalues-指定-仅用于类型的导入-import-的-emit-checking-行为"}},[e._v("importsNotUsedAsValues 指定 仅用于类型的导入（import）的 emit/checking 行为")])]),a("li",[a("a",{attrs:{href:"#jsxfactory-指定生成-react-jsx-时使用的-jsx-工厂函数"}},[e._v("jsxFactory 指定生成 react jsx 时使用的 jsx 工厂函数")])]),a("li",[a("a",{attrs:{href:"#alwaysstrict-是否总是在严格模式下解析-并为每个源文件生成-use-strict"}},[e._v("alwaysStrict 是否总是在严格模式下解析，并为每个源文件生成 'use strict'")])]),a("li",[a("a",{attrs:{href:"#strict-是否开启所有-严格类型检查-配置选项"}},[e._v("strict 是否开启所有 严格类型检查 配置选项")])]),a("li",[a("a",{attrs:{href:"#strictbindcallapply-是否在对函数使用-bind-call-apply-时使用更严格的检查"}},[e._v("strictBindCallApply 是否在对函数使用 bind, call, apply 时使用更严格的检查")])]),a("li",[a("a",{attrs:{href:"#downleveliteration-是否为低版本编译目标提供迭代器的完整支持"}},[e._v("downlevelIteration 是否为低版本编译目标提供迭代器的完整支持")])]),a("li",[a("a",{attrs:{href:"#checkjs-是否在-js-文件中报告错误-需与-allowjs-选项配合使用"}},[e._v("checkJs 是否在 .js 文件中报告错误，需与 allowJs 选项配合使用")])]),a("li",[a("a",{attrs:{href:"#strictfunctiontypes-严格的函数参数类型检查"}},[e._v("strictFunctionTypes 严格的函数参数类型检查")])]),a("li",[a("a",{attrs:{href:"#strictpropertyinitialization-是否要求-class-的属性必须在构造函数初始化"}},[e._v("strictPropertyInitialization 是否要求 class 的属性必须在构造函数初始化")])]),a("li",[a("a",{attrs:{href:"#esmoduleinterop-是否生成-babel-runtime-helper-并启用-allowsyntheticdefaultimports"}},[e._v("esModuleInterop 是否生成 babel runtime helper 并启用 allowSyntheticDefaultImports")])]),a("li",[a("a",{attrs:{href:"#allowumdglobalaccess-是否允许从模块访问-umd-全局变量"}},[e._v("allowUmdGlobalAccess 是否允许从模块访问 UMD 全局变量")])]),a("li",[a("a",{attrs:{href:"#keyofstringsonly-是否仅将-keyof-解析为字符串值的属性名"}},[e._v("keyofStringsOnly 是否仅将 keyof 解析为字符串值的属性名")])]),a("li",[a("a",{attrs:{href:"#usedefineforclassfields-是否使用-ecmascript-标准语义生成-class-字段"}},[e._v("useDefineForClassFields 是否使用 ECMAScript 标准语义生成 class 字段")])]),a("li",[a("a",{attrs:{href:"#declarationmap-是否为每个-d-ts-声明文件-生成-sourcemap"}},[e._v("declarationMap 是否为每个 .d.ts 声明文件 生成 sourcemap")])]),a("li",[a("a",{attrs:{href:"#resolvejsonmodule-是否解析导入的-json-扩展名的模块"}},[e._v("resolveJsonModule 是否解析导入的 .json 扩展名的模块")])]),a("li",[a("a",{attrs:{href:"#assumechangesonlyaffectdirectdependencies-是否假设文件中改变只会直接影响和它相关的文件"}},[e._v("assumeChangesOnlyAffectDirectDependencies 是否假设文件中改变只会直接影响和它相关的文件")])])])])])]),a("p"),e._v(" "),a("h2",{attrs:{id:"编译选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译选项"}},[e._v("#")]),e._v(" 编译选项")]),e._v(" "),a("h3",{attrs:{id:"charset-输入文件的字符集编码-默认-utf8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#charset-输入文件的字符集编码-默认-utf8"}},[e._v("#")]),e._v(" "),a("code",[e._v("charset")]),e._v(" 输入文件的字符集编码，默认 'utf8'")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: 'utf8'")])]),e._v(" "),a("h3",{attrs:{id:"composite-是否开启对项目引用的编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#composite-是否开启对项目引用的编译"}},[e._v("#")]),e._v(" "),a("code",[e._v("composite")]),e._v(" 是否开启对项目引用的编译")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: true")])]),e._v(" "),a("p",[e._v("开启以确保TypeScript可以确定在哪里找到要编译项目的引用项目的输出。")]),e._v(" "),a("h3",{attrs:{id:"declaration-是否生成相应的-d-ts-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#declaration-是否生成相应的-d-ts-文件"}},[e._v("#")]),e._v(" "),a("code",[e._v("declaration")]),e._v(" 是否生成相应的 "),a("code",[e._v("d.ts")]),e._v(" 文件")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"declarationdir-指定-d-ts-声明文件的输出目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#declarationdir-指定-d-ts-声明文件的输出目录"}},[e._v("#")]),e._v(" "),a("code",[e._v("declarationDir")]),e._v(" 指定 "),a("code",[e._v(".d.ts")]),e._v(" 声明文件的输出目录")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("p",[e._v("TypeScript 2.0 版本以上生效")]),e._v(" "),a("h3",{attrs:{id:"diagnostics-是否显示诊断信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diagnostics-是否显示诊断信息"}},[e._v("#")]),e._v(" "),a("code",[e._v("diagnostics")]),e._v(" 是否显示诊断信息")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"emitbom-是否在输出文件开头生成-byte-order-mark-头信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emitbom-是否在输出文件开头生成-byte-order-mark-头信息"}},[e._v("#")]),e._v(" "),a("code",[e._v("emitBOM")]),e._v(" 是否在输出文件开头生成 Byte Order Mark 头信息")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("在输出文件的开头发出一个UTF-8字节顺序标记 Byte Order Mark(BOM)。")]),e._v(" "),a("h3",{attrs:{id:"emitdeclarationonly-是否只生成-d-ts-声明文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emitdeclarationonly-是否只生成-d-ts-声明文件"}},[e._v("#")]),e._v(" "),a("code",[e._v("emitDeclarationOnly")]),e._v(" 是否只生成 "),a("code",[e._v(".d.ts")]),e._v(" 声明文件")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"incremental-是否启用增量编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#incremental-是否启用增量编译"}},[e._v("#")]),e._v(" "),a("code",[e._v("incremental")]),e._v(" 是否启用增量编译")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: 跟随 composite 属性的值")])]),e._v(" "),a("p",[e._v("通过 读/写 磁盘上保存的先前的编译信息文件来启用增量编译。这个文件由 "),a("code",[e._v("tsBuildInfoFile")]),e._v(" 配置项控制。")]),e._v(" "),a("h3",{attrs:{id:"tsbuildinfofile-指定一个文件名来保存增量编译信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tsbuildinfofile-指定一个文件名来保存增量编译信息"}},[e._v("#")]),e._v(" "),a("code",[e._v("tsBuildInfoFile")]),e._v(" 指定一个文件名来保存增量编译信息")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: '.tsbuildinfo'")])]),e._v(" "),a("h3",{attrs:{id:"inlinesourcemap-是否将-sourcemaps-生成在同一个文件中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inlinesourcemap-是否将-sourcemaps-生成在同一个文件中"}},[e._v("#")]),e._v(" "),a("code",[e._v("inlineSourceMap")]),e._v(" 是否将 sourcemaps 生成在同一个文件中")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("将所有 sourcemaps 生成在一个文件中，而不是将每段 sourcemaps 都生成独立的文件")]),e._v(" "),a("h3",{attrs:{id:"inlinesources-是否将-sourcemap-生成在独立文件中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inlinesources-是否将-sourcemap-生成在独立文件中"}},[e._v("#")]),e._v(" "),a("code",[e._v("inlineSources")]),e._v(" 是否将 sourcemap 生成在独立文件中")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("将 sourcemaps 与代码生成在同一个独立文件中，要求设置了 "),a("code",[e._v("inlineSourceMap")]),e._v(" 或 "),a("code",[e._v("sourceMap")]),e._v(" 选项。")]),e._v(" "),a("h3",{attrs:{id:"jsx-指定-jsx-代码生成-在-tsx-中支持-jsx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-指定-jsx-代码生成-在-tsx-中支持-jsx"}},[e._v("#")]),e._v(" "),a("code",[e._v("jsx")]),e._v(" 指定 jsx 代码生成，在 tsx 中支持 jsx")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: 'preserve'")])]),e._v(" "),a("p",[e._v("可选值："),a("code",[e._v("'preserve' | 'react' | 'react-native'")])]),e._v(" "),a("h3",{attrs:{id:"reactnamespace-已弃用-由-jsxfactory-选项代替"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reactnamespace-已弃用-由-jsxfactory-选项代替"}},[e._v("#")]),e._v(" "),a("code",[e._v("reactNamespace")]),e._v(" 已弃用，由 "),a("code",[e._v("jsxFactory")]),e._v(" 选项代替")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: 'React'")])]),e._v(" "),a("p",[e._v("当目标为生成 "),a("code",[e._v("react")]),e._v(" JSX时，指定 "),a("code",[e._v("createElement")]),e._v(" 和 "),a("code",[e._v("__spread")]),e._v(" 的调用对象")]),e._v(" "),a("h3",{attrs:{id:"listfiles-是否在编译过程中列出文件列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#listfiles-是否在编译过程中列出文件列表"}},[e._v("#")]),e._v(" "),a("code",[e._v("listFiles")]),e._v(" 是否在编译过程中列出文件列表")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"maproot-为-debugger-指定-sourcemap-文件的路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maproot-为-debugger-指定-sourcemap-文件的路径"}},[e._v("#")]),e._v(" "),a("code",[e._v("mapRoot")]),e._v(" 为 debugger 指定 sourcemap 文件的路径")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("p",[e._v("为调试器指定指定sourcemap文件的路径，而不是使用生成时的路径。当 "),a("code",[e._v(".map")]),e._v(" 文件是在运行时指定的，并不同于 js 文件的地址时使用这个标记。指定的路径会嵌入到 sourceMap 里告诉调试器到哪里去找它们。")]),e._v(" "),a("h3",{attrs:{id:"module-指定生成哪个模块系统代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-指定生成哪个模块系统代码"}},[e._v("#")]),e._v(" "),a("code",[e._v("module")]),e._v(" 指定生成哪个模块系统代码")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: target === 'ES6' ? 'ES6' : 'commonjs'")])]),e._v(" "),a("p",[e._v("可选值 "),a("code",[e._v("'None' | 'CommonJS' | 'AMD' | 'System' | 'UMD' | 'ES6' | 'ES2015' | 'ES2020' | 'ESNext'")])]),e._v(" "),a("p",[e._v("只有 "),a("code",[e._v("'AMD'")]),e._v("  和 "),a("code",[e._v("'System'")]),e._v(" 能够和 "),a("code",[e._v("outFile")]),e._v(" 选项一起使用。")]),e._v(" "),a("p",[e._v("值 "),a("code",[e._v('"ES6"')]),e._v(" 和 "),a("code",[e._v('"ES2015"')]),e._v(" 可使用在目标输出为 "),a("code",[e._v('"ES5"')]),e._v(" 或更低的情况下。")]),e._v(" "),a("h3",{attrs:{id:"newline-指定行结束符是-crlf-lf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#newline-指定行结束符是-crlf-lf"}},[e._v("#")]),e._v(" "),a("code",[e._v("newLine")]),e._v(" 指定行结束符是 "),a("code",[e._v("'crlf' | 'lf'")])]),e._v(" "),a("p",[e._v('当生成文件时指定行结束符： "crlf"（windows）或 "lf"（unix）。')]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: 根据平台指定")])]),e._v(" "),a("p",[e._v("可选值 "),a("code",[e._v("'crlf' | 'lf'")])]),e._v(" "),a("h3",{attrs:{id:"noemit-是否不生成输出文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noemit-是否不生成输出文件"}},[e._v("#")]),e._v(" "),a("code",[e._v("noEmit")]),e._v(" 是否不生成输出文件")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"noemithelpers-是否不在输出文件中生成用户自定义的帮助函数代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noemithelpers-是否不在输出文件中生成用户自定义的帮助函数代码"}},[e._v("#")]),e._v(" "),a("code",[e._v("noEmitHelpers")]),e._v(" 是否不在输出文件中生成用户自定义的帮助函数代码")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("不在输出文件中生成用户自定义的帮助函数代码，如 "),a("code",[e._v("__extends")])]),e._v(" "),a("h3",{attrs:{id:"noemitonerror-是否在报错时不生成输出文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noemitonerror-是否在报错时不生成输出文件"}},[e._v("#")]),e._v(" "),a("code",[e._v("noEmitOnError")]),e._v(" 是否在报错时不生成输出文件")]),e._v(" "),a("p",[e._v("'description': 'Do not emit outputs if any type checking errors were reported.',")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"noimplicitany-是否禁止使用隐式-any-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noimplicitany-是否禁止使用隐式-any-类型"}},[e._v("#")]),e._v(" "),a("code",[e._v("noImplicitAny")]),e._v(" 是否禁止使用隐式 "),a("code",[e._v("any")]),e._v(" 类型")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("在表达式和声明上有隐含的 "),a("code",[e._v("any")]),e._v(" 类型时报错")]),e._v(" "),a("h3",{attrs:{id:"noimplicitthis-是否在-this-表达式的值为隐式-any-类型的时候报错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noimplicitthis-是否在-this-表达式的值为隐式-any-类型的时候报错"}},[e._v("#")]),e._v(" "),a("code",[e._v("noImplicitThis")]),e._v(" 是否在 "),a("code",[e._v("this")]),e._v(" 表达式的值为隐式 "),a("code",[e._v("any")]),e._v(" 类型的时候报错")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("当 "),a("code",[e._v("this")]),e._v(" 表达式的值为隐式 "),a("code",[e._v("any")]),e._v(" 类型的时候报错")]),e._v(" "),a("h3",{attrs:{id:"nounusedlocals-是否在有未使用的局部变量时抛错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nounusedlocals-是否在有未使用的局部变量时抛错"}},[e._v("#")]),e._v(" "),a("code",[e._v("noUnusedLocals")]),e._v(" 是否在有未使用的局部变量时抛错")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"nounusedparameters-是否在有未使用的参数时报错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nounusedparameters-是否在有未使用的参数时报错"}},[e._v("#")]),e._v(" "),a("code",[e._v("noUnusedParameters")]),e._v(" 是否在有未使用的参数时报错")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"nolib-是否不包含默认的库文件-lib-d-ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nolib-是否不包含默认的库文件-lib-d-ts"}},[e._v("#")]),e._v(" "),a("code",[e._v("noLib")]),e._v(" 是否不包含默认的库文件 "),a("code",[e._v("lib.d.ts")])]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"noresolve-是否不把-reference-或-模块导入的目标-加到已编译的文件列表中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noresolve-是否不把-reference-或-模块导入的目标-加到已编译的文件列表中"}},[e._v("#")]),e._v(" "),a("code",[e._v("noResolve")]),e._v(" 是否不把 "),a("code",[e._v("/// <reference>")]),e._v(" 或 模块导入的目标 加到已编译的文件列表中")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("如果设为 "),a("code",[e._v("true")]),e._v("，三斜线引用会被忽略；它们不会增加新文件，也不会改变给定文件的顺序。")]),e._v(" "),a("h3",{attrs:{id:"nostrictgenericchecks-是否禁用在函数类型里对泛型签名进行严格检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nostrictgenericchecks-是否禁用在函数类型里对泛型签名进行严格检查"}},[e._v("#")]),e._v(" "),a("code",[e._v("noStrictGenericChecks")]),e._v(" 是否禁用在函数类型里对泛型签名进行严格检查")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"skipdefaultlibcheck-已弃用-是否忽略库的默认声明文件的类型检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skipdefaultlibcheck-已弃用-是否忽略库的默认声明文件的类型检查"}},[e._v("#")]),e._v(" "),a("code",[e._v("skipDefaultLibCheck")]),e._v(" 已弃用，是否忽略库的默认声明文件的类型检查")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"skiplibcheck-是否忽略所有的声明文件-d-ts-的类型检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skiplibcheck-是否忽略所有的声明文件-d-ts-的类型检查"}},[e._v("#")]),e._v(" "),a("code",[e._v("skipLibCheck")]),e._v(" 是否忽略所有的声明文件（ "),a("code",[e._v("*.d.ts")]),e._v("）的类型检查")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"outfile-指定将输出文件合并为一个文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outfile-指定将输出文件合并为一个文件"}},[e._v("#")]),e._v(" "),a("code",[e._v("outFile")]),e._v(" 指定将输出文件合并为一个文件")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("p",[e._v("将输出文件合并为一个文件。合并的顺序是根据传入编译器的文件顺序和 "),a("code",[e._v("///<reference``>")]),e._v(" 和 "),a("code",[e._v("import")]),e._v(" 的文件顺序决定的。")]),e._v(" "),a("h3",{attrs:{id:"outdir-重定向输出结构目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outdir-重定向输出结构目录"}},[e._v("#")]),e._v(" "),a("code",[e._v("outDir")]),e._v(" 重定向输出结构目录")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("h3",{attrs:{id:"preserveconstenums-是否在生成的代码中保留-const-enum-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preserveconstenums-是否在生成的代码中保留-const-enum-声明"}},[e._v("#")]),e._v(" "),a("code",[e._v("preserveConstEnums")]),e._v(" 是否在生成的代码中保留 const enum 声明")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"preservesymlinks-是否保留符号链接将其视为文件-不将它视为真实路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preservesymlinks-是否保留符号链接将其视为文件-不将它视为真实路径"}},[e._v("#")]),e._v(" "),a("code",[e._v("preserveSymlinks")]),e._v(" 是否保留符号链接将其视为文件，不将它视为真实路径")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("不把符号链接解析为其真实路径；将符号链接文件视为真正的文件")]),e._v(" "),a("h3",{attrs:{id:"preservewatchoutput-是否保留-watch-模式下过时的控制台输出而不清屏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preservewatchoutput-是否保留-watch-模式下过时的控制台输出而不清屏"}},[e._v("#")]),e._v(" "),a("code",[e._v("preserveWatchOutput")]),e._v(" 是否保留 watch 模式下过时的控制台输出而不清屏")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"pretty-是否给错误和消息设置样式-使用颜色和上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pretty-是否给错误和消息设置样式-使用颜色和上下文"}},[e._v("#")]),e._v(" "),a("code",[e._v("pretty")]),e._v(" 是否给错误和消息设置样式，使用颜色和上下文")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"removecomments-是否删除所有注释-除了以-开头的版权信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#removecomments-是否删除所有注释-除了以-开头的版权信息"}},[e._v("#")]),e._v(" "),a("code",[e._v("removeComments")]),e._v(" 是否删除所有注释，除了以 "),a("code",[e._v("/!*")]),e._v(" 开头的版权信息")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"rootdir-指定输入文件的根目录来控制-outdir-选项的输出目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rootdir-指定输入文件的根目录来控制-outdir-选项的输出目录结构"}},[e._v("#")]),e._v(" "),a("code",[e._v("rootDir")]),e._v(" 指定输入文件的根目录来控制 "),a("code",[e._v("outDir")]),e._v(" 选项的输出目录结构")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: 通常默认以输入文件为准")])]),e._v(" "),a("p",[e._v("指定输入文件的根目录，仅用来控制 "),a("code",[e._v("outDir")]),e._v(" 选项的输出目录结构")]),e._v(" "),a("h3",{attrs:{id:"isolatedmodules-是否无条件的为未解析的文件生成-imports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isolatedmodules-是否无条件的为未解析的文件生成-imports"}},[e._v("#")]),e._v(" "),a("code",[e._v("isolatedModules")]),e._v(" 是否无条件的为未解析的文件生成 imports")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("将每个文件作为单独的模块（与 "),a("code",[e._v("ts.transpileModule")]),e._v(" 类似），执行额外的检查以确保单独的编译(例如使用 "),a("code",[e._v("transpileModule")]),e._v(" 或 "),a("code",[e._v("@babel/plugin-transform-typescript")]),e._v(" )是安全的。")]),e._v(" "),a("h3",{attrs:{id:"sourcemap-是否生成相应的-map文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sourcemap-是否生成相应的-map文件"}},[e._v("#")]),e._v(" "),a("code",[e._v("sourceMap")]),e._v(" 是否生成相应的 .map文件")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"sourceroot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sourceroot"}},[e._v("#")]),e._v(" "),a("code",[e._v("sourceRoot")])]),e._v(" "),a("p",[e._v("'description': 'Specifies the location where debugger should locate TypeScript files instead of source locations.',")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("p",[e._v("指定 debugger 应该定位的 TypeScript文件而不是 源路径 的位置。")]),e._v(" "),a("p",[e._v("如果源将在运行时位于与设计时不同的位置，请使用此标志。")]),e._v(" "),a("p",[e._v("指定的位置将嵌入到sourceMap中，以指导 debugger 找到源文件所在的位置。")]),e._v(" "),a("h3",{attrs:{id:"suppressexcesspropertyerrors-是否禁止对对象字面量进行过多-额外-的属性检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#suppressexcesspropertyerrors-是否禁止对对象字面量进行过多-额外-的属性检查"}},[e._v("#")]),e._v(" "),a("code",[e._v("suppressExcessPropertyErrors")]),e._v(" 是否禁止对对象字面量进行过多（额外）的属性检查")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"suppressimplicitanyindexerrors-是否阻止索引对象缺乏索引签名时的-noimplicitany-错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#suppressimplicitanyindexerrors-是否阻止索引对象缺乏索引签名时的-noimplicitany-错误"}},[e._v("#")]),e._v(" "),a("code",[e._v("suppressImplicitAnyIndexErrors")]),e._v(" 是否阻止索引对象缺乏索引签名时的 "),a("code",[e._v("noImplicitAny")]),e._v(" 错误")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("阻止 "),a("code",[e._v("noImplicitAny")]),e._v(" 对缺少索引签名的索引对象报错。查看 issue #1232了解详情。")]),e._v(" "),a("h3",{attrs:{id:"stripinternal-是否不对-internal-jsdoc注解的代码生成声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stripinternal-是否不对-internal-jsdoc注解的代码生成声明"}},[e._v("#")]),e._v(" "),a("code",[e._v("stripInternal")]),e._v(" 是否不对 "),a("code",[e._v("/** @internal */")]),e._v(" JSDoc注解的代码生成声明")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("不对具有 "),a("code",[e._v("/** @internal */")]),e._v(" JSDoc注解的代码生成声明")]),e._v(" "),a("h3",{attrs:{id:"target-指定ecmascript目标版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#target-指定ecmascript目标版本"}},[e._v("#")]),e._v(" "),a("code",[e._v("target")]),e._v(" 指定ECMAScript目标版本")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: 'ES3'")])]),e._v(" "),a("p",[e._v("可选值 "),a("code",[e._v("'ES3', 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ESNext'")])]),e._v(" "),a("h3",{attrs:{id:"watch-是否监听输入文件的改变-在它们改变时重新编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch-是否监听输入文件的改变-在它们改变时重新编译"}},[e._v("#")]),e._v(" "),a("code",[e._v("watch")]),e._v(" 是否监听输入文件的改变，在它们改变时重新编译")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("p",[e._v("在监视模式下运行编译器。会监视输出文件，在它们改变时重新编译。监视文件和目录的具体实现可以通过环境变量进行配置。详情请看配置 Watch。")]),e._v(" "),a("h3",{attrs:{id:"experimentaldecorators-是否启用对实验性的es7装饰器的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#experimentaldecorators-是否启用对实验性的es7装饰器的支持"}},[e._v("#")]),e._v(" "),a("code",[e._v("experimentalDecorators")]),e._v(" 是否启用对实验性的ES7装饰器的支持")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"emitdecoratormetadata-是否给源码里的装饰器声明生成设计类型元数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emitdecoratormetadata-是否给源码里的装饰器声明生成设计类型元数据"}},[e._v("#")]),e._v(" "),a("code",[e._v("emitDecoratorMetadata")]),e._v(" 是否给源码里的装饰器声明生成设计类型元数据")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"moduleresolution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#moduleresolution"}},[e._v("#")]),e._v(" "),a("code",[e._v("moduleResolution")])]),e._v(" "),a("p",[e._v("'description': 'Specifies module resolution strategy: 'node' (Node) or 'classic' (TypeScript pre 1.6) .',")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v('default: module === "AMD" or "System" or "ES6" ? "Classic" : "Node"')])]),e._v(" "),a("p",[e._v("可选值 "),a("code",[e._v("'Classic' | 'Node'")])]),e._v(" "),a("p",[e._v("决定如何处理模块。设置为 "),a("code",[e._v('"Node"')]),e._v(" 对于 "),a("code",[e._v("Node.js/io.js")]),e._v("风格的处理。")]),e._v(" "),a("h3",{attrs:{id:"allowunusedlabels-是否允许未使用标签存在-不报告未使用标签的错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allowunusedlabels-是否允许未使用标签存在-不报告未使用标签的错误"}},[e._v("#")]),e._v(" "),a("code",[e._v("allowUnusedLabels")]),e._v(" 是否允许未使用标签存在，不报告未使用标签的错误")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"noimplicitreturns-是否禁止函数的隐式返回值-若没有返回值时报错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noimplicitreturns-是否禁止函数的隐式返回值-若没有返回值时报错"}},[e._v("#")]),e._v(" "),a("code",[e._v("noImplicitReturns")]),e._v(" 是否禁止函数的隐式返回值，若没有返回值时报错")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("不是函数的所有返回路径都有返回值时报错。")]),e._v(" "),a("h3",{attrs:{id:"nofallthroughcasesinswitch-是否禁止在-switch-语句中出现-fallthrough-case-没有-break"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nofallthroughcasesinswitch-是否禁止在-switch-语句中出现-fallthrough-case-没有-break"}},[e._v("#")]),e._v(" "),a("code",[e._v("noFallthroughCasesInSwitch")]),e._v(" 是否禁止在 switch 语句中出现 fallthrough case（没有 break）")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("在 switch 语句中出现 case 语句贯穿时报错")]),e._v(" "),a("h3",{attrs:{id:"allowunreachablecode-是否允许出现死区代码-永远无法执行到达的代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allowunreachablecode-是否允许出现死区代码-永远无法执行到达的代码"}},[e._v("#")]),e._v(" "),a("code",[e._v("allowUnreachableCode")]),e._v(" 是否允许出现死区代码（永远无法执行到达的代码）")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("默认 "),a("code",[e._v("false")]),e._v(" 表示出现死区代码时报错，设为 true 则不报错。")]),e._v(" "),a("h3",{attrs:{id:"forceconsistentcasinginfilenames-是否强制对同一文件使用一致的大小写引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#forceconsistentcasinginfilenames-是否强制对同一文件使用一致的大小写引用"}},[e._v("#")]),e._v(" "),a("code",[e._v("forceConsistentCasingInFileNames")]),e._v(" 是否强制对同一文件使用一致的大小写引用")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("是否不允许对同一文件使用大小写不一致的引用。")]),e._v(" "),a("h3",{attrs:{id:"baseurl-指定解析非相对模块名的基准目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#baseurl-指定解析非相对模块名的基准目录"}},[e._v("#")]),e._v(" "),a("code",[e._v("baseUrl")]),e._v(" 指定解析非相对模块名的基准目录")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("p",[e._v("设置 "),a("code",[e._v("baseUrl")]),e._v(" 来告诉编译器到哪里去查找模块。 所有非相对模块导入都会被当做相对于 "),a("code",[e._v("baseUrl")]),e._v("。")]),e._v(" "),a("p",[e._v("如果给定的路径是相对的，那么将相对于 "),a("code",[e._v("tsconfig.json")]),e._v(" 路径进行计算。")]),e._v(" "),a("p",[e._v("相对模块的导入不会被设置的baseUrl所影响，因为它们总是相对于导入它们的文件。")]),e._v(" "),a("h3",{attrs:{id:"paths-指定要计算的相对于-baseurl-的路径映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#paths-指定要计算的相对于-baseurl-的路径映射"}},[e._v("#")]),e._v(" "),a("code",[e._v("paths")]),e._v(" 指定要计算的相对于 "),a("code",[e._v("baseUrl")]),e._v(" 的路径映射")]),e._v(" "),a("p",[a("code",[e._v("type: object")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("p",[e._v("对象的属性值类型为 "),a("code",[e._v("Array<string>")]),e._v("，路径字符串组成的数组。")]),e._v(" "),a("h3",{attrs:{id:"plugins-列出要加载的typescript语言服务器插件列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugins-列出要加载的typescript语言服务器插件列表"}},[e._v("#")]),e._v(" "),a("code",[e._v("plugins")]),e._v(" 列出要加载的TypeScript语言服务器插件列表")]),e._v(" "),a("p",[a("code",[e._v("type: array")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("p",[e._v("数组元素为对象，对象 key 为插件名，value 为插件描述对象")]),e._v(" "),a("h3",{attrs:{id:"rootdirs-指定解析模块时使用的根目录列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rootdirs-指定解析模块时使用的根目录列表"}},[e._v("#")]),e._v(" "),a("code",[e._v("rootDirs")]),e._v(" 指定解析模块时使用的根目录列表")]),e._v(" "),a("p",[a("code",[e._v("type: Array<string>")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("p",[e._v("根文件夹列表，其组合内容表示运行时项目的结构。")]),e._v(" "),a("h3",{attrs:{id:"typeroots-指定要包含的类型声明文件的目录列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeroots-指定要包含的类型声明文件的目录列表"}},[e._v("#")]),e._v(" "),a("code",[e._v("typeRoots")]),e._v(" 指定要包含的类型声明文件的目录列表")]),e._v(" "),a("p",[a("code",[e._v("type: Array<string>")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("h3",{attrs:{id:"types-指定编译中包含的类型声明文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#types-指定编译中包含的类型声明文件"}},[e._v("#")]),e._v(" "),a("code",[e._v("types")]),e._v(" 指定编译中包含的类型声明文件")]),e._v(" "),a("p",[a("code",[e._v("type: Array<string>")])]),e._v(" "),a("p",[a("code",[e._v("default: -")])]),e._v(" "),a("h3",{attrs:{id:"traceresolution-是否启用名称解析过程的跟踪-报告模块解析日志消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#traceresolution-是否启用名称解析过程的跟踪-报告模块解析日志消息"}},[e._v("#")]),e._v(" "),a("code",[e._v("traceResolution")]),e._v(" 是否启用名称解析过程的跟踪，报告模块解析日志消息")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"allowjs-是否允许编译-javascript-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allowjs-是否允许编译-javascript-文件"}},[e._v("#")]),e._v(" "),a("code",[e._v("allowJs")]),e._v(" 是否允许编译 javascript 文件")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"noerrortruncation-是否不截断错误消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noerrortruncation-是否不截断错误消息"}},[e._v("#")]),e._v(" "),a("code",[e._v("noErrorTruncation")]),e._v(" 是否不截断错误消息")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"allowsyntheticdefaultimports-是否允许从没有设置默认导出的模块中默认导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allowsyntheticdefaultimports-是否允许从没有设置默认导出的模块中默认导入"}},[e._v("#")]),e._v(" "),a("code",[e._v("allowSyntheticDefaultImports")]),e._v(" 是否允许从没有设置默认导出的模块中默认导入")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v('default: module === "system" 或 esModuleInterop 选项值')])]),e._v(" "),a("p",[e._v("允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。")]),e._v(" "),a("h3",{attrs:{id:"noimplicitusestrict-是否在模块输出中不输出-use-strict-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noimplicitusestrict-是否在模块输出中不输出-use-strict-指令"}},[e._v("#")]),e._v(" "),a("code",[e._v("noImplicitUseStrict")]),e._v(" 是否在模块输出中不输出 "),a("code",[e._v('"use strict"')]),e._v(" 指令")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"listemittedfiles-是否列出所有编译生成的文件名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#listemittedfiles-是否列出所有编译生成的文件名"}},[e._v("#")]),e._v(" "),a("code",[e._v("listEmittedFiles")]),e._v(" 是否列出所有编译生成的文件名")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"disablesizelimit-是否禁用-javascript-项目的大小限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#disablesizelimit-是否禁用-javascript-项目的大小限制"}},[e._v("#")]),e._v(" "),a("code",[e._v("disableSizeLimit")]),e._v(" 是否禁用 JavaScript 项目的大小限制")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"lib-指定编译过程中需要包含的库文件的列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lib-指定编译过程中需要包含的库文件的列表"}},[e._v("#")]),e._v(" "),a("code",[e._v("lib")]),e._v(" 指定编译过程中需要包含的库文件的列表")]),e._v(" "),a("p",[a("code",[e._v("type: Array<string>")])]),e._v(" "),a("p",[a("code",[e._v("default: 见下方")])]),e._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n'ES5', 'ES6', 'ES2015', 'ES7', 'ES2016', 'ES2017', 'ES2018', 'ESNext',\n'DOM', 'DOM.Iterable', 'WebWorker', 'ScriptHost', 'ES2015.Core', 'ES2015.Collection',\n'ES2015.Generator', 'ES2015.Iterable', 'ES2015.Promise', 'ES2015.Proxy',\n'ES2015.Reflect', 'ES2015.Symbol','ES2015.Symbol.WellKnown', 'ES2016.Array.Include',\n'ES2017.object', 'ES2017.Intl', 'ES2017.SharedMemory', 'ES2017.String',\n'ES2017.TypedArrays', 'ES2018.Intl', 'ES2018.Promise', 'ES2018.RegExp',\n'ESNext.AsyncIterable', 'ESNext.Array', 'ESNext.Intl', 'ESNext.Symbol'\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("如果 "),a("code",[e._v("lib")]),e._v(" 没有指定默认注入的库的列表。默认注入的库为：")]),e._v(" "),a("ul",[a("li",[e._v("针对于 "),a("code",[e._v("target")]),e._v(" 选项值为 "),a("code",[e._v("'ES5'")]),e._v("："),a("code",[e._v("['DOM'，'ES5'，'ScriptHost']")])]),e._v(" "),a("li",[e._v("针对于 "),a("code",[e._v("target")]),e._v("选项值为 "),a("code",[e._v("'ES6'")]),e._v("："),a("code",[e._v("['DOM'，'ES6'，'DOM.Iterable'，'ScriptHost']")])])]),e._v(" "),a("h3",{attrs:{id:"strictnullchecks-是否开启严格的-null-检查模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strictnullchecks-是否开启严格的-null-检查模式"}},[e._v("#")]),e._v(" "),a("code",[e._v("strictNullChecks")]),e._v(" 是否开启严格的 "),a("code",[e._v("null")]),e._v(" 检查模式")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("在严格的 "),a("code",[e._v("null")]),e._v(" 检查模式下， "),a("code",[e._v("null")]),e._v(" 和 "),a("code",[e._v("undefined")]),e._v(" 值不包含在任何类型里，只允许用它们自己和 "),a("code",[e._v("any")]),e._v(" 来赋值（有个例外， "),a("code",[e._v("undefined")]),e._v(" 可以赋值到 "),a("code",[e._v("void")]),e._v(" ）。")]),e._v(" "),a("h3",{attrs:{id:"maxnodemodulejsdepth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maxnodemodulejsdepth"}},[e._v("#")]),e._v(" "),a("code",[e._v("maxNodeModuleJsDepth")])]),e._v(" "),a("p",[a("code",[e._v("type: number")])]),e._v(" "),a("p",[a("code",[e._v("default: 0")])]),e._v(" "),a("p",[e._v("在 "),a("code",[e._v("node_modules")]),e._v(" 目录下搜索和加载 JavaScript 文件的最大依赖深度。仅适用于 "),a("code",[e._v("allowJs")]),e._v(" 选项值为 "),a("code",[e._v("true")]),e._v(" 时。")]),e._v(" "),a("h3",{attrs:{id:"importhelpers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#importhelpers"}},[e._v("#")]),e._v(" "),a("code",[e._v("importHelpers")])]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("从 "),a("code",[e._v("tslib")]),e._v(" 导入辅助工具函数（比如 "),a("code",[e._v("__extends")]),e._v(" ， "),a("code",[e._v("__rest")]),e._v(" 等）")]),e._v(" "),a("h3",{attrs:{id:"importsnotusedasvalues-指定-仅用于类型的导入-import-的-emit-checking-行为"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#importsnotusedasvalues-指定-仅用于类型的导入-import-的-emit-checking-行为"}},[e._v("#")]),e._v(" "),a("code",[e._v("importsNotUsedAsValues")]),e._v(" 指定 仅用于类型的导入（"),a("code",[e._v("import")]),e._v("）的 emit/checking 行为")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: 'remove'")])]),e._v(" "),a("p",[e._v("可选值 "),a("code",[e._v("'remove' | 'preserve' | 'error'")])]),e._v(" "),a("h3",{attrs:{id:"jsxfactory-指定生成-react-jsx-时使用的-jsx-工厂函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsxfactory-指定生成-react-jsx-时使用的-jsx-工厂函数"}},[e._v("#")]),e._v(" "),a("code",[e._v("jsxFactory")]),e._v(" 指定生成 react jsx 时使用的 jsx 工厂函数")]),e._v(" "),a("p",[a("code",[e._v("type: string")])]),e._v(" "),a("p",[a("code",[e._v("default: 'React.createElement'")])]),e._v(" "),a("p",[e._v("指定生成目标为react JSX时，使用的JSX工厂函数，比如 "),a("code",[e._v("React.createElement")]),e._v(" 或 "),a("code",[e._v("h")]),e._v(" 。")]),e._v(" "),a("h3",{attrs:{id:"alwaysstrict-是否总是在严格模式下解析-并为每个源文件生成-use-strict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alwaysstrict-是否总是在严格模式下解析-并为每个源文件生成-use-strict"}},[e._v("#")]),e._v(" "),a("code",[e._v("alwaysStrict")]),e._v(" 是否总是在严格模式下解析，并为每个源文件生成 "),a("code",[e._v("'use strict'")])]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"strict-是否开启所有-严格类型检查-配置选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strict-是否开启所有-严格类型检查-配置选项"}},[e._v("#")]),e._v(" "),a("code",[e._v("strict")]),e._v(" 是否开启所有 严格类型检查 配置选项")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("若启用此选项，则相当于会自动启用：")]),e._v(" "),a("ul",[a("li",[e._v("noImplicitAny")]),e._v(" "),a("li",[e._v("noImplicitThis")]),e._v(" "),a("li",[e._v("alwaysStrict")]),e._v(" "),a("li",[e._v("strictBindCallApply")]),e._v(" "),a("li",[e._v("strictNullChecks")]),e._v(" "),a("li",[e._v("strictFunctionTypes")]),e._v(" "),a("li",[e._v("strictPropertyInitialization")])]),e._v(" "),a("h3",{attrs:{id:"strictbindcallapply-是否在对函数使用-bind-call-apply-时使用更严格的检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strictbindcallapply-是否在对函数使用-bind-call-apply-时使用更严格的检查"}},[e._v("#")]),e._v(" "),a("code",[e._v("strictBindCallApply")]),e._v(" 是否在对函数使用 "),a("code",[e._v("bind")]),e._v(", "),a("code",[e._v("call")]),e._v(", "),a("code",[e._v("apply")]),e._v(" 时使用更严格的检查")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"downleveliteration-是否为低版本编译目标提供迭代器的完整支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#downleveliteration-是否为低版本编译目标提供迭代器的完整支持"}},[e._v("#")]),e._v(" "),a("code",[e._v("downlevelIteration")]),e._v(" 是否为低版本编译目标提供迭代器的完整支持")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("当编译目标为 "),a("code",[e._v("ES5")]),e._v(" 或 "),a("code",[e._v("ES3")]),e._v(" 时，为 "),a("code",[e._v("for...of")]),e._v("、展开运算符("),a("code",[e._v("...")]),e._v(")、解构赋值提供完整的支持。")]),e._v(" "),a("h3",{attrs:{id:"checkjs-是否在-js-文件中报告错误-需与-allowjs-选项配合使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checkjs-是否在-js-文件中报告错误-需与-allowjs-选项配合使用"}},[e._v("#")]),e._v(" "),a("code",[e._v("checkJs")]),e._v(" 是否在 "),a("code",[e._v(".js")]),e._v(" 文件中报告错误，需与 "),a("code",[e._v("allowJs")]),e._v(" 选项配合使用")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"strictfunctiontypes-严格的函数参数类型检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strictfunctiontypes-严格的函数参数类型检查"}},[e._v("#")]),e._v(" "),a("code",[e._v("strictFunctionTypes")]),e._v(" 严格的函数参数类型检查")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("该规则将检查并限制函数类型参数是抗变（contravariantly）而非双变（bivariantly，即协变或抗变）的。")]),e._v(" "),a("p",[e._v("双变（协变或抗变）：子类型可以隐性的转换为父类型。")]),e._v(" "),a("h3",{attrs:{id:"strictpropertyinitialization-是否要求-class-的属性必须在构造函数初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strictpropertyinitialization-是否要求-class-的属性必须在构造函数初始化"}},[e._v("#")]),e._v(" "),a("code",[e._v("strictPropertyInitialization")]),e._v(" 是否要求 class 的属性必须在构造函数初始化")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("确保 类(class) 的 非 "),a("code",[e._v("undefined")]),e._v(" 属性已经在构造函数里初始化。")]),e._v(" "),a("p",[e._v("若要令此选项生效，需要同时启用 "),a("code",[e._v("strictNullChecks")]),e._v(" 配置项。")]),e._v(" "),a("h3",{attrs:{id:"esmoduleinterop-是否生成-babel-runtime-helper-并启用-allowsyntheticdefaultimports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#esmoduleinterop-是否生成-babel-runtime-helper-并启用-allowsyntheticdefaultimports"}},[e._v("#")]),e._v(" "),a("code",[e._v("esModuleInterop")]),e._v(" 是否生成 babel runtime helper 并启用 "),a("code",[e._v("allowSyntheticDefaultImports")])]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("若设置为 "),a("code",[e._v("true")]),e._v("， 会为 运行时的 babel 生态系统兼容性 生成 "),a("code",[e._v("'__importStar'")]),e._v(" 和 "),a("code",[e._v("'__importDefault'")]),e._v(" 帮助程序，同时会为类型兼容系统启用 "),a("code",[e._v("allowSyntheticDefaultImports")]),e._v(" 配置项。")]),e._v(" "),a("h3",{attrs:{id:"allowumdglobalaccess-是否允许从模块访问-umd-全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allowumdglobalaccess-是否允许从模块访问-umd-全局变量"}},[e._v("#")]),e._v(" "),a("code",[e._v("allowUmdGlobalAccess")]),e._v(" 是否允许从模块访问 UMD 全局变量")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("h3",{attrs:{id:"keyofstringsonly-是否仅将-keyof-解析为字符串值的属性名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keyofstringsonly-是否仅将-keyof-解析为字符串值的属性名"}},[e._v("#")]),e._v(" "),a("code",[e._v("keyofStringsOnly")]),e._v(" 是否仅将 "),a("code",[e._v("keyof")]),e._v(" 解析为字符串值的属性名")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("仅将 "),a("code",[e._v("keyof")]),e._v(" 解析为字符串值的属性名(没有 number 或 symbols)。")]),e._v(" "),a("h3",{attrs:{id:"usedefineforclassfields-是否使用-ecmascript-标准语义生成-class-字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usedefineforclassfields-是否使用-ecmascript-标准语义生成-class-字段"}},[e._v("#")]),e._v(" "),a("code",[e._v("useDefineForClassFields")]),e._v(" 是否使用 ECMAScript 标准语义生成 class 字段")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("使用 ECMAScript 标准语义生成 class 字段，TypeScript 3.7 版本以上生效。")]),e._v(" "),a("h3",{attrs:{id:"declarationmap-是否为每个-d-ts-声明文件-生成-sourcemap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#declarationmap-是否为每个-d-ts-声明文件-生成-sourcemap"}},[e._v("#")]),e._v(" "),a("code",[e._v("declarationMap")]),e._v(" 是否为每个 "),a("code",[e._v(".d.ts")]),e._v(" 声明文件 生成 sourcemap")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("为每个对应的 "),a("code",[e._v(".d.ts")]),e._v(" 文件生成一个 sourcemap，TypeScript 2.9 版本以上生效。")]),e._v(" "),a("h3",{attrs:{id:"resolvejsonmodule-是否解析导入的-json-扩展名的模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolvejsonmodule-是否解析导入的-json-扩展名的模块"}},[e._v("#")]),e._v(" "),a("code",[e._v("resolveJsonModule")]),e._v(" 是否解析导入的 "),a("code",[e._v(".json")]),e._v(" 扩展名的模块")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("包含使用.json扩展名导入的模块，TypeScript 2.9 版本以上生效。")]),e._v(" "),a("h3",{attrs:{id:"assumechangesonlyaffectdirectdependencies-是否假设文件中改变只会直接影响和它相关的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assumechangesonlyaffectdirectdependencies-是否假设文件中改变只会直接影响和它相关的文件"}},[e._v("#")]),e._v(" "),a("code",[e._v("assumeChangesOnlyAffectDirectDependencies")]),e._v(" 是否假设文件中改变只会直接影响和它相关的文件")]),e._v(" "),a("p",[a("code",[e._v("type: boolean")])]),e._v(" "),a("p",[a("code",[e._v("default: false")])]),e._v(" "),a("p",[e._v("在 "),a("code",[e._v("incremental")]),e._v("和 "),a("code",[e._v("watch")]),e._v(" 配置项开启之中进行重新编译时，假设一个文件中的更改只会直接影响和它相关的文件。")])])}),[],!1,null,null,null);t.default=r.exports}}]);