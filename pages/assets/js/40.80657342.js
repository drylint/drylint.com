(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{243:function(s,t,a){"use strict";a.r(t);var e=a(6),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git-subtree-子仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-subtree-子仓库"}},[s._v("#")]),s._v(" git subtree 子仓库")]),s._v(" "),a("p",[s._v("git subtree 可以将一个仓库作为仓库的子仓库，各个仓库之前的版本管理是相对独立的，对于使用者来说，是透明的，可能使用者根本都不知道有子仓库的存在，主子仓库的分支同步，即你切换主项目分支的时候，关联的子仓库也会同步切换。")]),s._v(" "),a("h2",{attrs:{id:"git-subtree-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-subtree-常用命令"}},[s._v("#")]),s._v(" git subtree 常用命令")]),s._v(" "),a("p",[s._v("运行 "),a("code",[s._v("git subtree -h")]),s._v(" 可以看到：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("   --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("   --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree merge --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree pull  --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree push  --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("通用参数：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("-h, --help            show the "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n-q                    quiet\n-d                    show debug messages\n-P, --prefix "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".      the name of the subdir to "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" out\n-m, --message "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".     use the given message as the commit message "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the merge commit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("git "),a("code",[s._v("add")]),s._v(", "),a("code",[s._v("merge")]),s._v(", "),a("code",[s._v("pull")]),s._v(" 可用的参数：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--squash              merge subtree changes as a single commit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("git split")]),s._v(" 可用的参数：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--annotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" a prefix to commit message of new commits\n-b, --branch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".      create a new branch from the "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" subtree\n--ignore-joins        ignore prior --rejoin commits\n--onto "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".            try connecting new tree to an existing one\n--rejoin              merge the new branch back into HEAD\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"将多个独立仓库关联为父子仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将多个独立仓库关联为父子仓库"}},[s._v("#")]),s._v(" 将多个独立仓库关联为父子仓库")]),s._v(" "),a("p",[s._v("在代码托管平台创建两个仓库，分别叫做 "),a("code",[s._v("main-project")]),s._v(", "),a("code",[s._v("utils")]),s._v(", 并全部克隆到本地，现在是空的仓库，先任意创建一些内容，然后推送到远程。")]),s._v(" "),a("p",[s._v("现在，每个仓库都有自己的内容了。 "),a("code",[s._v("main-project")]),s._v(" 保存主项目的代码， "),a("code",[s._v("utils")]),s._v(" 保存公用工具代码。只不过现在这些仓库各自独立，还没有任何联系。")]),s._v(" "),a("p",[s._v("开始将它们关联起来，以下操作都是在主仓库 "),a("code",[s._v("main-project")]),s._v(" 下进行：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加 utils 作为远程仓库 git@github.com:drylint/utils.git 的别名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -f 表示添加远程仓库 utils 之后，立即执行 fetch 操作")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -f utils git@github.com:drylint/utils.git\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 utils 仓库添加为当前主仓库的子仓库，并指定主仓库的某个目录作为子仓库的存放目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git subtree add --prefix=<子仓库目录路径> <子仓库地址/别名> <子仓库分支> --squash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --prefix=utils 中的 utils 表示子仓库在主仓库的存放路径，此处表示根目录下的 utils 目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# utils master 表示关联的仓库为 utils 远程下的 master 分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --squash 表示将子仓库中所有 commit 记录作为一次提交记录合并到主仓库中，以免在主仓库产生多条提交记录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utils utils master --squash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("当远程仓库 "),a("code",[s._v("utils")]),s._v(" 做出了一些修改时，将其更新到主仓库的 "),a("code",[s._v("utils")]),s._v(" 目录中：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取远程仓库 utils 的 master 分支到当前项目下的 utils 目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git subtree pull --prefix=<子仓库目录路径> <子仓库地址/别名> <子仓库分支> --squash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree pull  --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utils utils master --squash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("当在主项目中，对 "),a("code",[s._v("utils")]),s._v(" 目录做出了一些修改，想要推送到子仓库 "),a("code",[s._v("utils")]),s._v(" 中：")]),s._v(" "),a("p",[s._v("注意，先将主仓库的修改进行 commit 。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将主仓库中对子仓库的修改内容推送到子仓库 utils 中")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git subtree push --prefix=<子仓库目录路径> <子仓库地址/别名> <子仓库分支> --squash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree push --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utils utils master --squash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("至此，将两个毫不相关的仓库作为父子仓库的操作已经完成。")]),s._v(" "),a("p",[s._v("还有一种情况，一开始只有一个仓库，做到一定程度时，想要将某些公共模块抽离出来作为一个独立的子仓库。这样就可以在多个主仓库项目中关联并使用。")]),s._v(" "),a("h2",{attrs:{id:"将一个仓库的目录分离为独立子仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将一个仓库的目录分离为独立子仓库"}},[s._v("#")]),s._v(" 将一个仓库的目录分离为独立子仓库")]),s._v(" "),a("p",[s._v("现在的情况是，只有一个代码仓库，叫做 "),a("code",[s._v("main-project")]),s._v(" ，其中有一个目录路径为 "),a("code",[s._v("src/styles")]),s._v(" ，其中存放了很多公用样式代码，现在想将它分离出来作为一个独立的子仓库，以便于在多个项目中关联使用。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分离当前主仓库的某个目录，将其作为一个临时分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git subtree split --prefix=<子仓库目录路径> -b <临时分支名>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("src/styles -b temp-styles\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这一步将主仓库下 "),a("code",[s._v("src/styles")]),s._v(" 目录分离出来作为一个临时分支叫做 "),a("code",[s._v("temp-styles")]),s._v("。")]),s._v(" "),a("p",[s._v("接下来在主仓库之外的任何地方创建一个子仓库，比如，在 "),a("code",[s._v("main-project")]),s._v(" 同级目录下创建一个 "),a("code",[s._v("styles")]),s._v(" 目录作为子仓库。")]),s._v(" "),a("p",[s._v("在子仓库 "),a("code",[s._v("styles")]),s._v(" 下执行命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 styles 目录初始化为一个 git 仓库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取主仓库下创建的临时分支到子仓库来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/main-project temp-styles\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加远程仓库地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin git@github.com:drylint/styles.git\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将内容推送到远程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -u origin master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("到这一步，将主仓库下的 "),a("code",[s._v("src/styles")]),s._v(" 目录独立分离出来作为一个仓库就完成了。")]),s._v(" "),a("p",[s._v("但是，目前还没有将主仓库 "),a("code",[s._v("main-project")]),s._v(" 和独立出来的仓库 "),a("code",[s._v("styles")]),s._v(" 关联为父子仓库。")]),s._v(" "),a("p",[s._v("接下来，回到主仓库 "),a("code",[s._v("main-project")]),s._v(" 中，删除 "),a("code",[s._v("src/styles")]),s._v(" 目录，删除创建的临时分支 "),a("code",[s._v("temp-styles")]),s._v(" 。")]),s._v(" "),a("p",[s._v("到这一步，有了主仓库（但主仓库中没有 "),a("code",[s._v("styles")]),s._v(" 目录了），有了 "),a("code",[s._v("styles")]),s._v(" 仓库，又回到了第一种情况，将两个独立的仓库关联为父子仓库。")]),s._v(" "),a("p",[s._v("按照 "),a("a",{attrs:{href:"#%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8B%AC%E7%AB%8B%E4%BB%93%E5%BA%93%E5%85%B3%E8%81%94%E4%B8%BA%E7%88%B6%E5%AD%90%E4%BB%93%E5%BA%93"}},[s._v("将多个独立仓库关联为父子仓库")]),s._v(" 的步骤，就能完成关联操作了。")]),s._v(" "),a("p",[s._v("到这里，就已经完成了将一个主仓库的目录分离为独立子仓库，并将独立仓库关联为主仓库的子仓库。")])])}),[],!1,null,null,null);t.default=n.exports}}]);