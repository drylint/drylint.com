(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{248:function(s,t,n){"use strict";n.r(t);var a=n(6),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"git-项目工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-项目工具"}},[s._v("#")]),s._v(" git 项目工具")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#husky"}},[s._v("husky")])]),t("li",[t("a",{attrs:{href:"#commitlint"}},[s._v("commitlint")])]),t("li",[t("a",{attrs:{href:"#commtizen"}},[s._v("commtizen")]),t("ul",[t("li",[t("a",{attrs:{href:"#全局安装使用-不推荐"}},[s._v("全局安装使用(不推荐)")])]),t("li",[t("a",{attrs:{href:"#项目内安装使用-推荐"}},[s._v("项目内安装使用(推荐)")])])])]),t("li",[t("a",{attrs:{href:"#standard-version"}},[s._v("standard-version")])])])]),t("p"),s._v(" "),t("ul",[t("li",[t("code",[s._v("husky")]),s._v(" git 钩子(git hooks) 工具，常用于提交前做一些验证操作")]),s._v(" "),t("li",[t("code",[s._v("commitlint")]),s._v(" 用于校验提交的消息是否符合规范")]),s._v(" "),t("li",[t("code",[s._v("commtizen")]),s._v(" 进行规范提交的一个的交互式工具")]),s._v(" "),t("li",[t("code",[s._v("cz-conventional-changelog")]),s._v(" 默认的 "),t("code",[s._v("commtizen")]),s._v(" 的适配器，可选用适用于自己项目的适配器，或是选择自己发布的适配器")]),s._v(" "),t("li",[t("code",[s._v("Conventional Changelog")]),s._v(" (不建议使用)从项目的提交消息和元数据中生成变更日志和发布说明。建议使用高级的 "),t("code",[s._v("standard-version")]),s._v(" 库，它是 npm 版本命令的替代，可以自动处理版本碰撞、标记和 CHANGELOG 生成。")]),s._v(" "),t("li",[t("code",[s._v("standard-version")]),s._v(" 使用 "),t("code",[s._v("semver.org")]),s._v(" 和 "),t("code",[s._v("conventionalcommits.org")]),s._v(" 自动化版本控制和变更日志生成。")])]),s._v(" "),t("h2",{attrs:{id:"husky"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[s._v("#")]),s._v(" husky")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://typicode.github.io/husky/#/",target:"_blank",rel:"noopener noreferrer"}},[s._v("husky 官方文档"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" husky --save-dev\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化，启用 git hooks")]),s._v("\nnpx husky "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加 hook 之 pre-commit, 提交之前的钩子")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加后，执行 git commit 时，则会先执行 npm run lint")]),s._v("\nnpx husky "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" .husky/pre-commit "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run lint"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加 git hooks 之 commit-msg，提交消息验证钩子")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加后，执行 git commit 时会验证提交消息是否符合规范")]),s._v("\nnpx husky "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" .husky/commit-msg "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'npx --no-install commitlint --edit \"$1\"'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("注意，旧版本的 husky 配置信息放在 "),t("code",[s._v("package.json")]),s._v(" 的 "),t("code",[s._v("husky")]),s._v(" 字段中，比如：")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"husky"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"hooks"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"pre-commit"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run lint"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commit-msg"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"npx --no-install commitlint --edit '$1'\"")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("v6 版本遗弃了这样的配置方式，而是在项目根目录生成了 "),t("code",[s._v(".husky")]),s._v(" 目录（和 "),t("code",[s._v(".git")]),s._v(" 目录相邻），每一个钩子会对应一个没有扩展名的文件，比如：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("├── .husky\n│   ├── .gitignore\n│   ├── commit-msg\n│   ├── pre-commit\n│   └─_\n│     └─ husky.sh\n├── .git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("上面提到的文件结构中，在 "),t("code",[s._v("npx husky install")]),s._v(" 初始化后，"),t("code",[s._v("commit-msg")]),s._v(" 和 "),t("code",[s._v("pre-commit")]),s._v(" 文件是不存在的，在执行对应的添加钩子的命令后，才会生成对应文件。")]),s._v(" "),t("h2",{attrs:{id:"commitlint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commitlint"}},[s._v("#")]),s._v(" commitlint")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"}},[s._v("commitlint 官方文档"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("安装：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装必要的两个包")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save-dev @commitlint/config-conventional @commitlint/cli\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("使用：")]),s._v(" "),t("p",[s._v("项目根目录新建 commitlint 的配置文件 "),t("code",[s._v("commitlint.config.js")]),s._v(" ，并写入：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@commitlint/config-conventional'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("commitlint 的配置文件可以是："),t("code",[s._v("commitlint.config.js")]),s._v(", "),t("code",[s._v(".commitlintrc.js")]),s._v(", "),t("code",[s._v(".commitlintrc.json")]),s._v(", "),t("code",[s._v(".commitlintrc.yml")]),s._v(" 或是 "),t("code",[s._v("package.json")]),s._v(" 中的 "),t("code",[s._v("commitlint")]),s._v(" 字段，优先级依次降低，只会使用找到的优先级最高的配置文件。")]),s._v(" "),t("h2",{attrs:{id:"commtizen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commtizen"}},[s._v("#")]),s._v(" commtizen")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/commitizen/cz-cli#readme",target:"_blank",rel:"noopener noreferrer"}},[s._v("commtizen 官方文档"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("当您使用 commtizen 进行提交时，将提示您在提交时填写任何必需的提交字段。不再等待git提交钩子运行并拒绝你的提交(尽管这仍然是有帮助的)。不再通过贡献挖掘。Md找到首选格式是什么。获得关于提交消息格式的即时反馈，并提示您输入必需字段。")]),s._v(" "),t("h3",{attrs:{id:"全局安装使用-不推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局安装使用-不推荐"}},[s._v("#")]),s._v(" 全局安装使用(不推荐)")]),s._v(" "),t("p",[s._v("如果是自己用，全局安装是没问题的，但通常情况来说都是团队协作，或者是开源的，会有更多贡献者参与，全局安装方式就不适用了，因为其他人不一定全局安装了。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 git cz 代替 git commit , 实际上会运行全局安装的 commtizen")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# C:\\Users\\xxx\\AppData\\Roaming\\npm\\node_modules\\commitizen\\bin\\git-cz")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cz\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"项目内安装使用-推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目内安装使用-推荐"}},[s._v("#")]),s._v(" 项目内安装使用(推荐)")]),s._v(" "),t("p",[s._v("安装：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目内安装 commitizen")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save-dev commitizen\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目内初始化 commitizen 适配器(conventional changelog adapter)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此处使用 cz-conventional-changelog ，可自选喜欢的适配器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此命令会安装 cz-conventional-changelog，然后在 package.json 添加 `config.commitizen` 配置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 失败时可以在末尾添加 --force 参数")]),s._v("\nnpx commitizen init cz-conventional-changelog --save-dev --save-exact\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("使用：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行 commtizen 进行交互式的 git commit, 实际会运行项目内安装的 commtizen")]),s._v("\nnpx cz\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等同于此命令， git-cz 是 cz 的别名")]),s._v("\nnpx git-cz\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("如果在 "),t("code",[s._v("package.json")]),s._v(" 中的 "),t("code",[s._v("scripts")]),s._v(" 字段加入：")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cz"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cz"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("则可以使用 "),t("code",[s._v("npm run cz")]),s._v(" 来进行 "),t("code",[s._v("git commit")]),s._v(" 。因为写在 "),t("code",[s._v("scripts")]),s._v(" 中的命令不需要通过 npx 来访问项目内 "),t("code",[s._v("node_modules/.bin")]),s._v(" 目录")]),s._v(" "),t("h2",{attrs:{id:"standard-version"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#standard-version"}},[s._v("#")]),s._v(" standard-version")])])}),[],!1,null,null,null);t.default=e.exports}}]);