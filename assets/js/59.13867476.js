(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{267:function(a,t,s){"use strict";s.r(t);var e=s(6),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"mediarecorder-构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-构造函数"}},[a._v("#")]),a._v(" MediaRecorder 构造函数")]),a._v(" "),t("p",[t("code",[a._v("MediaRecorder")]),a._v(" 构造函数会创建一个对指定的 "),t("code",[a._v("MediaStream")]),a._v(" 进行录制的 MediaRecorder 实例对象")]),a._v(" "),t("h2",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" mediaRecorder "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MediaRecorder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("stream"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h3",{attrs:{id:"参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[a._v("#")]),a._v(" 参数")]),a._v(" "),t("h4",{attrs:{id:"stream"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stream"}},[a._v("#")]),a._v(" stream")]),a._v(" "),t("p",[a._v("MediaStream 将要录制的流. 它可以是来自于使用 navigator.mediaDevices.getUserMedia() 创建的流或者来自于 "),t("code",[a._v("<audio>")]),a._v(", "),t("code",[a._v("<video>")]),a._v(" 以及 "),t("code",[a._v("<canvas>")]),a._v(" DOM元素.")]),a._v(" "),t("h4",{attrs:{id:"options-可选参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#options-可选参数"}},[a._v("#")]),a._v(" options 可选参数")]),a._v(" "),t("p",[a._v("一个字典对象,它可以包含下列属性:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("mimeType")]),a._v(": 为新构建的 MediaRecorder 指定录制容器的MIME类型. 在应用中通过调用 "),t("code",[a._v("MediaRecorder.isTypeSupported()")]),a._v(" 来检查浏览器是否支持此种 mimeType .")]),a._v(" "),t("li",[t("code",[a._v("audioBitsPerSecond")]),a._v(": 指定音频的比特率.")]),a._v(" "),t("li",[t("code",[a._v("videoBitsPerSecond")]),a._v(": 指定视频的比特率.")]),a._v(" "),t("li",[t("code",[a._v("bitsPerSecond")]),a._v(": 指定音频和视频的比特率. 此属性可以用来指定上面两个属性. 如果上面两个属性只有其中之一和此属性被指定, 则此属性可以用于设定另外一个属性.")])]),a._v(" "),t("p",[a._v("如果视频或音频的比特率没有指定, 视频默认采用的比特率是2.5Mbps, 但音频的默认比特率并不固定, 音频的默认比特率根据采样率和轨道数自适应")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" options "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("audioBitsPerSecond")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("128000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("videoBitsPerSecond")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2500000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("mimeType")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'video/mp4'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取流")]),a._v("\nnavigator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mediaDevices"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getUserMedia")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("audio")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// track 1")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("video")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// track 0")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("stream")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" mediaRecorder "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MediaRecorder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("stream"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// mediaRecorder.start() // 可以 自动触发 或者 在某时手动触发")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// mediaRecorder.stop() // 当 stop() 触发后，mediaRecorder.ondataavailable 会自动触发")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取 blob")]),a._v("\n  mediaRecorder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("ondataavailable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" blob "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" blobURL "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("URL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createObjectURL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("blob"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    video"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("src "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" blobURL\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br")])]),t("h3",{attrs:{id:"mediarecorder-静态方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-静态方法"}},[a._v("#")]),a._v(" MediaRecorder 静态方法")]),a._v(" "),t("p",[a._v("MediaRecorder.isTypeSupported()")]),a._v(" "),t("h3",{attrs:{id:"mediarecorder-实例属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-实例属性"}},[a._v("#")]),a._v(" MediaRecorder 实例属性")]),a._v(" "),t("p",[a._v("除 "),t("code",[a._v("ignoreMutedMedia")]),a._v(" 以外均为只读属性")]),a._v(" "),t("h4",{attrs:{id:"mimetype-只读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mimetype-只读"}},[a._v("#")]),a._v(" mimeType 只读")]),a._v(" "),t("p",[a._v("返回 MediaRecorder 对象创建时选择器选择的录制容器的 MIME type")]),a._v(" "),t("h4",{attrs:{id:"state-只读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-只读"}},[a._v("#")]),a._v(" state 只读")]),a._v(" "),t("p",[a._v("返回录制对象MediaRecorder  的当前状态(闲置中,录制中或者暂停 ) (inactive, recording, or paused.)")]),a._v(" "),t("h4",{attrs:{id:"stream-只读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stream-只读"}},[a._v("#")]),a._v(" stream 只读")]),a._v(" "),t("p",[a._v("返回录制器对象 MediaRecorder 创建时构造函数传入的stream对象")]),a._v(" "),t("h4",{attrs:{id:"ignoremutedmedia"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ignoremutedmedia"}},[a._v("#")]),a._v(" ignoreMutedMedia")]),a._v(" "),t("p",[a._v("用以指定 MediaRecorder是否录制无声的输入源. 如果这个属性是false. 录制器对象MediaRecorder  会录制无声的音频或者黑屏的视频, 默认值是false")]),a._v(" "),t("h4",{attrs:{id:"videobitspersecond-只读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#videobitspersecond-只读"}},[a._v("#")]),a._v(" videoBitsPerSecond 只读")]),a._v(" "),t("p",[a._v("返回视频采用的编码比率. 它可能和构造函数的设置比率不同.  (if it was provided).")]),a._v(" "),t("h4",{attrs:{id:"audiobitspersecond-只读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#audiobitspersecond-只读"}},[a._v("#")]),a._v(" audioBitsPerSecond 只读")]),a._v(" "),t("p",[a._v("返回音频采用的编码比率,它可能和构造函数中设置的比率不同. (if it was provided).")]),a._v(" "),t("h3",{attrs:{id:"实例方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[a._v("#")]),a._v(" 实例方法")]),a._v(" "),t("h4",{attrs:{id:"istypesupported"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#istypesupported"}},[a._v("#")]),a._v(" isTypeSupported()")]),a._v(" "),t("p",[a._v("返回一个Boolean 值,来表示设置的MIME type 是否被当前用户的设备支持.")]),a._v(" "),t("h4",{attrs:{id:"pause"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pause"}},[a._v("#")]),a._v(" pause()")]),a._v(" "),t("p",[a._v("暂停媒体录制")]),a._v(" "),t("h4",{attrs:{id:"requestdata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requestdata"}},[a._v("#")]),a._v(" requestData()")]),a._v(" "),t("p",[a._v("请求一个从开始到当前接收到的,存储为Blob类型的录制内容. (或者是返回从上一次调用requestData() 方法之后到现在的内容).  调用这个方法后,录制将会继续进行,但是会创建一个新的Blob对象")]),a._v(" "),t("h4",{attrs:{id:"resume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resume"}},[a._v("#")]),a._v(" resume()")]),a._v(" "),t("p",[a._v("继续录制之前被暂停的录制动作.")]),a._v(" "),t("h4",{attrs:{id:"start"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[a._v("#")]),a._v(" start()")]),a._v(" "),t("p",[a._v("开始录制媒体,这个方法调用时可以通过给timeslice参数设置一个毫秒值,如果设置这个毫秒值,那么录制的媒体会按照你设置的值进行分割成一个个单独的区块, 而不是以默认的方式录制一个非常大的整块内容.")]),a._v(" "),t("h4",{attrs:{id:"stop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[a._v("#")]),a._v(" stop()")]),a._v(" "),t("p",[a._v("停止录制. 同时触发 "),t("code",[a._v("dataavailable")]),a._v(" 事件,返回一个存储Blob内容的录制数据.之后不再记录")]),a._v(" "),t("h3",{attrs:{id:"实例事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例事件"}},[a._v("#")]),a._v(" 实例事件")]),a._v(" "),t("h4",{attrs:{id:"ondataavailable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ondataavailable"}},[a._v("#")]),a._v(" ondataavailable")]),a._v(" "),t("p",[a._v("调用它用来处理 dataavailable 事件, 该事件可用于获取录制的媒体资源 (在事件的 e.data 属性中会提供一个可用的 Blob 对象.)")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("mediaRecorder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("ondataavailable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" blob "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" blobURL "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("URL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createObjectURL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("blob"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  video"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("src "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" blobURL\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("h4",{attrs:{id:"onerror"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#onerror"}},[a._v("#")]),a._v(" onerror")]),a._v(" "),t("p",[a._v("An EventHandler called to handle the recordingerror event, including reporting errors that arise with media recording. These are fatal errors that stop recording.")]),a._v(" "),t("h4",{attrs:{id:"onpause"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#onpause"}},[a._v("#")]),a._v(" onpause")]),a._v(" "),t("p",[a._v("用来处理 pause 事件, 该事件在媒体暂停录制时触发，"),t("code",[a._v("pause()")]),a._v(" 触发时")]),a._v(" "),t("h4",{attrs:{id:"onresume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#onresume"}},[a._v("#")]),a._v(" onresume")]),a._v(" "),t("p",[a._v("用来处理 resume 事件, 该事件在暂停后回复录制视频时触发，"),t("code",[a._v("resume()")]),a._v(" 触发时")]),a._v(" "),t("h4",{attrs:{id:"onstart"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#onstart"}},[a._v("#")]),a._v(" onstart")]),a._v(" "),t("p",[a._v("用来处理 start 事件, 该事件在媒体开始录制时触发，"),t("code",[a._v("start()")]),a._v(" 触发时.")]),a._v(" "),t("h4",{attrs:{id:"onstop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#onstop"}},[a._v("#")]),a._v(" onstop")]),a._v(" "),t("p",[a._v("用来处理 stop 事件, 该事件会在媒体录制结束时、媒体流（MediaStream）结束时、或者调用 "),t("code",[a._v("stop()")]),a._v(" 方法后触发")])])}),[],!1,null,null,null);t.default=r.exports}}]);