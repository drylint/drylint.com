(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{357:function(s,n,a){"use strict";a.r(n);var t=a(6),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"_1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1"}},[s._v("#")]),s._v(" 1")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("\nMySQL数据库\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 如何保存数据\n    内存：速度快，空间有限\n    自定义文件，速度慢\n    Acess/Excel 文件越大速度越慢\n    数据库存储\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 数据库概述"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Database"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：按照特定的数据结构存储数据的软件\n    网状数据库\n    层次性数据库\n    关系型数据库"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RDBMS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      server -"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Database -"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Table -"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Row -"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Column\n      SQLite：微型数据库，常用于移动设备\n      MySQL: 开源中小型数据库，可用于各种操作系统\n      PostgreSQL：开源中小型数据库\n      SQL Server：Microsoft开发的中型数据库，只用于Windows系统\n      Oracle：Oracle公司开发的中大型数据库，可用于各种操作系统\n      DB2：IBM公司开发的中大型数据库，常与IBM服务器搭配\n    非关系型数据库"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NoSQL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". MySQL数据库\n    Oracle分支： mysql.com\n    Martin分支： mariadb.org\n    xampp服务器套装：包含有多个开源服务器Apache、MySQL、PHP\n      mysqld.exe 服务器启动文件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d：deamon进程"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      mysql.exe  连接数据库服务器\n      data： 保存数据库服务器中的数据\n    安装使用MySQL数据库系统\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("服务器端：下载并安装mysql服务器软件\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("服务器端：启动mysql服务器，保证端口3306被MySQL占用\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("客户端：使用MySQL.exe连接数据库\n           输入命令：mysql.exe "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h127.0.0.1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-P3306")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-uroot")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v("\n           "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-hlocalhost也可，-P3306的P需大写"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n           -h：host\n           -P:port端口"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n           -u：user用户名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root为默认用户名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n           -p：password密码\n           最终简写形式：mysql "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-uroot")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-uroot如果删除则进入的来宾账户"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". MySQL常用管理命令"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("前提是已经成功连接进入数据库"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("【全部加分号结尾】\n    quit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    退出数据库：\n    show databases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    查看服务器中有哪些数据库：\n    use dbName数据库名称"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  使用数据库：\n    show tables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    显示当前数据库中所有的数据表\n    desc tableName数据表名称"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 描述表中都有哪些列"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表头"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    练习：查询MySQL数据库中每一个数据库都有多少个数据表\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". MySQL中的SQL语句\n    SQL：Structured Query Language 结构化查询语言，用于操作关系型数据服务器\n       中的数据————增删改查\n    SQL语言最早由ANSI提出，后提交给ISO最终成为了数据库行业标准的语言，\n       分为SQL-87、SQL-92、SQL-99，被绝大多数关系型数据库所支持。\n\n    SQL语句两种执行方式：\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("交互模式：在客户端输入一行，点击回车，服务器执行一行。\n        适用于临时性查看数据\n        mysql "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-uroot")]),s._v(" 回车\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("脚本模式：客户端把要执行的命令写在一个文本文件中，一次性提交给服务器执行。\n        适用于批量的增删改查。\n        mysql "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-uroot")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" C:/xampp/htdocs/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("./2.sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    SQL语法规范：\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("每条SQL语句都以英文分号结尾，一条语句可跨越多行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("USE命令除外"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，见到分号认为语句结束。\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("假如第N条语句出现语法错误，则此语句之后的所有语句都不会再执行。\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("SQL语句不区分大小写，习惯上，关键字用大写，非关键字用小写。\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("SQL语句单行注释"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#...)、多行注释(/*...*/)，注释的语句不执行。")]),s._v("\n    常用的SQL语句\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("指定编码格式\n          SET NAMES UTF8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("丢弃指定的数据库，如果存在的话\n           DROP DATABASE IF EXISTS jd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("创建新的数据库\n           CREATE DATABASE jd "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CHARSET")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("UTF8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("进入"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("使用"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("创建的数据库\n           USE jd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("在进入的数据库中创建数据表\n           CREATE TABLE emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" INT,\n            name VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n            addr VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n            phone VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n           "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("插入数据\n        a. INSERT INTO tableName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column1,colume2,column3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            VALUES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1,value2,value3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1,value2,value3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" //批量插入多行指定某几个列的数据\n        b. INSERT INTO emp VALUES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEIJING'")]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'131...'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" // 插入一行完整的完整的包含每一列数据\n        c. INSERT INTO emp VALUES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" // 插入多行完整的包含每一列数据\n        d. INSERT INTO emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name,phone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" VALUES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Jerry'")]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'135...'")]),s._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        e. INSERT INTO tableName SET field1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value1,field2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value2,"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" // 使用键值对快速插入一行若干列数据，不能批量插入\n        f. INSERT INTO tableName SET "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("field1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value1,field2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value2,"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("// 使用对象形式插入数据\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("删除数据\n           DELETE FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("id")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("更改数据\n           UPDATE user SET "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("upwd")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'12345678'")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("email")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123@163.com'")]),s._v(" WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("查询数据\n           SELECT * FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    练习：新建4.sql，创建数据库tedu，在其中创建表student，\n    包含sid,name,sex,score，向表中插入4条学生的数据\n课后练习：\n创建xz.sql，创建数据库xz，在其中创建表user，\n包含uid,uname,upwd,email,phone,sex,userName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("真实姓名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，registerTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("注册时间 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),s._v("-08-20"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n插入5条数据，并查询所有。\n--------------------------------------------------------------------------------------\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".数据库中的中文乱码\n  计算机如何存储英文字符\n    ASCII码：总共有128个，对所有的英文字符以及符号进行的编码。\n    Latin-1：总共有256个，兼容ASCII码，同时对欧洲的符号进行了编码。\n    MySQL默认使用Latin-1编码，而Latin-1不支持中文字符，直接插入中文会出现乱码。\n  计算机如何存储中文字符\n    GB2312：对六千多个中文字符进行的编码，主要是简体中文，兼容ASCII码。\n    GBK：对两万多个中文字符进行编码，支持简繁体，兼容ASCII码。\n    Unicode：对世界上主要国家的语言进行了编码，兼容ASCII码。有UTF-8，UTF-16，UTF-32存储方案\n  中文乱码解决方案：\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("sql脚本文件保存时使用UTF8\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("客户端连接服务使用UTF8\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("服务器存储数据使用UTF8\n练习：创建一个脚本文件01_dangdang.sql，使用UTF8，创建book数据表，\n    包含bid，title，price，pubDate，isJia"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("是或否"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 列类型\n  创建数据表的时候，制定的列所保存的数据类型\n  CREATE TABLE book"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bid 列类型"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("数值类型-------数值类型可以不加引号\n    TINYINT   微整型，1字节，存储范围 -128~127\n    SMALLINT  小整型，占用二个字节，存储范围 -32768~32767\n    INT    整型，占用四个字节，存储范围-2147483648~2147483647\n    BIGINT   大整型，占用八个字节，存储范围-9223372036854775808~9223372036854775807\n    FLOAT   单精度浮点型，占用4个字节，可取出几位作为指数使用，实际存储范围比INT大得多\n    DOUBLE   双精度浮点型，占8个字节，实际存储范围比BIGINT大得多\n    DECIMAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M,D"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 定点小数，不会产生误差,总共有效位数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("不含小数点"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，D表示小数点后有效位数\n    BOOL   布尔型，只有两个值，TURE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("和FALSE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，最终的存储方式使用数字1和0\n类型     大小    范围"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("有符号"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("          范围"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("无符号"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                   用途\nTINYINT    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("字节   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-128，127"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，255"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                      小整数值\nSMALLINT   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 字节  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-32 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("768")]),s._v("，32 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("767")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，65 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("535")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                     大整数值\nMEDIUMINT   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 字节  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-8 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("388")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("608")]),s._v("，8 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("388")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("607")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，16 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("215")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                   大整数值\nINT或INTEGER "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 字节  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-2 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("147")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("483")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("648")]),s._v("，2 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("147")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("483")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("647")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，4 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("294")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("967")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("295")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                 大整数值\nBIGINT    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" 字节  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-9 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("233")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("372")]),s._v(" 036 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("854")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("775")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("808")]),s._v("，9 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("223")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("372")]),s._v(" 036 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("854")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("775")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("807")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，18 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("446")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("744")]),s._v(" 073 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("709")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("551")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("615")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 极大整数值\nFLOAT     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 字节  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-3.402 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("823")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("466")]),s._v(" E+38，-1.175 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("494")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("351")]),s._v(" E-38"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，0，"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.175")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("494")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("351")]),s._v(" E-38，3.402 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("823")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("466")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("351")]),s._v(" E+38"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.175")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("494")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("351")]),s._v(" E-38，3.402 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("823")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("466")]),s._v(" E+38"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 单精度\n浮点数值\nDOUBLE    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" 字节  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-1.797 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("693")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("134")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("862")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("315")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" E+308，-2.225 073 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("858")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("507")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("201")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" E-308"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，0，"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.225")]),s._v(" 073 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("858")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("507")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("201")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" E-308，1.797 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("693")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("134")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("862")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("315")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" E+308"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.225")]),s._v(" 073 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("858")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("507")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("201")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" E-308，1.797 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("693")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("134")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("862")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("315")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" E+308"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 双精度\n浮点数值\nDECIMAL   对DECIMAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M,D"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ，如果M"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("D，为M+2否则为D+2 依赖于M和D的值 依赖于M和D的值 小数值\n\n\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("日期/时间类型--必须加引号"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" 日期列插入 now"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  表示当前时间 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    DATE   日期类型，例如2018-09-04\n    TIME   时间类型，例如14:50:30\n    DATETIME  日期时间类型，例如：2018-09-04 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(":50:30\n    存储时间，存储的是距离1970年1月1日的毫秒数。\n\n类型  大小"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("字节"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    范围              格式         用途\nDATE   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("-01-01/9999-12-31           YYYY-MM-DD      日期值\nTIME   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-838:59:59'")]),s._v("/"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'838:59:59'")]),s._v("         HH:MM:SS       时间值或持续时间\nYEAR   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1901")]),s._v("/2155                 YYYY         年份值\nDATETIME "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("-01-01 00:00:00/9999-12-31 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":59:59  YYYY-MM-DD HH:MM:SS  混合日期和时间值\nTIMESTAMP "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1970")]),s._v("-01-01 00:00:00/2038\n\n结束时间是第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2147483647")]),s._v(" 秒，北京时间 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2038")]),s._v("-1-19 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":14:07，格林尼治时间 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2038")]),s._v("年1月19日 凌晨 03:14:07\n\nYYYYMMDD HHMMSS 混合日期和时间值，时间戳\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("字符串类型-----必须加引号\n    VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  Variable Character 变长字符串，查询速度相对较慢，不存在空间浪费，M长度最多存储65535\n    CHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   定长字符串，如手机号，身份证号等，查询速度较快，可能存在空间浪费，M最多存储255\n    TEXT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   大型变长字符串，M最多存储2G\n    注：\n      VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("中字符串长度小于指定长度M时，字符串后只补一个空格"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n      CHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("中字符串长度小于指定长度M时，字符串后补多个空格"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("直至长度和指定长度相同\n练习：创建一个脚本文件02_xz.sql,设置编码UTF8，创建数据库xz，在其中创建表laptop，\n    包含lid,title,price,stockCount,shelfTime,isIndex，插入4条。\n练习：使用恰当的列类型\n    创建脚本文件03_tedu.sql,设置UTF8，创建数据库tedu，创建部门信息表dept，包含did,dname,empCount,\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("号部门，3人\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("号部门，2人\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("号部门，2人\n    创建员工表emp，包含eid,ename,sex,phone,birthday,salary,deptid\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 约束"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("constraint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  MySQL可以对插入表中的数据进行特定的验证，只有满足条件的数据才允许进入数据库\n  约束可以在CREATE TABLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("建立表时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("或ALTER TABLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表建立后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("添加或修改\n  约束定义在单列"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("列级约束"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 可以约束当前列的数据"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("多列约束必须定义表级约束,相关的列在括号中指定,用逗号分隔\n  如果没有为约束提供一个名字,那么ORACLE会分配一个系统生成的唯一名字,以SYS_开头,\n  可以使用关键字CONSTRAINTS后面跟随相关的约束名字来为约束指定名字.\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("主键约束 PRIMARY KEY\n    主键约束相当于 唯一约束 + 非空约束 的组合，主键约束列不允许重复，也不允许出现空值\n    每个表最多只允许一个主键，建立主键约束可以在列级别创建，也可以在表级别创建。\n    当创建主键的约束时，系统默认会在所在的列和列组合上建立对应的唯一索引。\n    使用主键约束会加快查找速度。\n    约束定义存储在数据字典中,查询USER_CONSTRAINTS可以获得相关信息.\n    A. 建表时约束:\n      A. 列级\n        CREATE TABLE users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n          uid INT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" PRIMARY KEY,\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      B. 表级\n        CREATE TABLE users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n          uid INT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".,\n          CONSTRAINT users_id_pk PRIMARY KEY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      C. 复合主键\n        CREATE TABLE users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n          uid INT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".,\n          CONSTRAINT xxx PRIMARY KEY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uid,uname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    B. 建表后约束:\n      ALTER TABLE 表名 ADD CONSTRAINT 约束名称 增加的约束类型 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("列名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      ALTER TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" ADD CONSTRAINT xxx PRIMARY KEY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    C. 修改列为主键\n      ALTER TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" MODIFY "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" PRIMARY KEY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("唯一约束 UNIQUE\n    声明了唯一约束的列不能插入重复的值，但是允许插入一个或多个NULL。可在多行插入UNIQUE。\n    创建唯一约束时，如果不定义约束名称，就默认和列名相同。\n    A. 建表时约束:\n      A. 列级\n        CREATE TABLE users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n          uid INT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" PRIMARY KEY,\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" NOT NULL UNIQUE,\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      B. 表级\n        CREATE TABLE users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n          uid INT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" NOT NULL,\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".,\n          CONSTRAINT users_uname-uq UNIQUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      C. 复合\n        CREATE TABLE users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n          uid INT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n          email VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".,\n          //另一条数据的UNAME和EMAIL都重复则报错,一项重复不报错\n          CONSTRAINT xxx UNIQUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uname,email"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    B. 建表后约束:\n      ALTER TABLE 表格名称 ADD CONSTRAINT 约束名称 增加的约束类型 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("列名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      ALTER TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" ADD CONSTRAINT xxx UNIQUE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("非空约束 NOT NULL\n    禁止插入NULL，必须给定具体的数据,如果定义了NOT NULL的列没有插入数据，则会报错\n    如果插入的值是null，不会报错，字符串保存的值变成空的，数值型保存的值变成0。\n    非空约束只能定义列级，不能定义表级\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("默认值约束 DEFAULT\n    可以使用DEFAULT关键字为类声明默认值，两种方法使用：\n    在定义类后写 DEFAULT 值，然后在插入中写DEFAULT则使用默认值。\n    ① INSERT INTO user VALUES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),s._v(",DEFAULT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DEFAULT为默认值")]),s._v("\n    ② INSERT INTO user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uid,uname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" VALUES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最后一栏不写也是默认值")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("检查约束 CHECK\n    检查约束对要插入的数据进行检验\n    CREATE TABLE student"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      score TINYINT CHECK"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("score"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" AND score"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    MySQL不支持检查约束CHECK，它认为会降低数据的插入速度。\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("外键约束 FOREIGN KEY\n    声明了外键约束的列，取值必须在另一个表的主键列上出现过。\n    外部键列和引用键"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reference key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("列可以位于相同的表中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("自引用完整性约束"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    FOREIGN KEY约束还有两个关键字：\n      ON DELETE CASCADE --当删除所引用的父表记录时,删除子表中相关的记录\n      ON DELETE SET NULL--与上面不同的是删除时,转换子表中相关记录为NULL值\n      默认情况下,如果没有指定以上两个中任一,则父表中被引用的记录将不能被删除.\n    FOREIGN KEY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("本表的列"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" REFERENCES 之前的表"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表中的列"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    A. 创建表时约束\n      CREATE TABLE posts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        uid INT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" REFERENCES users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ON DELETE SET NULL, //列级\n        newsid INT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".,\n        posts_id INT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n        FOREIGN KEY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" REFERENCES users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ON DELETE CASCADE//表级,不指定约束名称,系统默认命名posts_uidfk_n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n为整数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        FOREIGN KEY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("posts_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" REFERENCES posts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newsid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" //自引用、自关联（递归表、树状表）\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      多列外键组合，必须用表级别约束语法\n      CONSTRAINT fk_uid_uname FOREIGN KEY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uid, "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" REFERENCES CLASSES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uid, "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    B. 建表后约束\n      ALTER TABLE EMP ADD CONSTRAINT users_uid_fk FOREIGN KEY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("did"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" REFERENCES "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 约束命令\n    添加约束\n      ALTER TABLE posts ADD CONSTRAINT users_uid_fk FOREIGN KEY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" REFERENCES users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    删除约束\n      ALTER TABLE posts DROP CONSTRAINT users_uid_fk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      ALTER TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" DROP PRIMARY KEY CASCADE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" //由于departments被employees.department_id引用了\n    删除NOT NULL约束,用ALTER TABLE MODIFY子句来删除\n      ALTER TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" MODIFY email NULL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    删除外键约束\n      ALTER TABLE TEMP DROP INDEX email"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      alter table student drop foreign key fk_uid_uname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    关闭约束\n      ALTER TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" DISABLE CONSTRAINT users_uid_pk CASCADE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   //如果没有被引用则不需CASCADE关键字\n    打开约束\n      ALTER TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" ENABLE CONSTRAINT users_uid_pk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" //注意,打开一个先前关闭的被引用的主键约束,并不能自动打开相关的外部键约束\n\n    可以从约束合集视图中查询约束的信息\n    SELECT constraint_name,constraint_type,search_condition\n      FROM user_constraints WHERE   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("table_name")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'users'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    约束类型\n    C--CHECK和NOT NULL都算为C TYPE\n    P--PRIMARY KEY\n    R--REFERENTIAL INTEGRITY就是外部键约束\n    U--UNIQUE\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 注释"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("comment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  CREATE TABLE users"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    uid INT NOT NULL DEFAULT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" COMMENT "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'用户ID'")]),s._v(", //列的注释\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("COMMENT"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'用户表'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" //表的注释\n  建表后添加注释\n    ALTER TABLE TEST CHANGE COLUMN ID ID INT NOT NULL DEFAULT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" COMMENT "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'用户编号'")]),s._v("\n  修改表的注释修改表的注释\n    ALTER TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" COMMENT "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'修改后的表的注释'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  修改列的注释\n    ALTER TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),s._v(" MODIFY COLUMN uid INT COMMENT "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'用户编号'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  查看表的注释\n    SHOW CREATE TABLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  查看列的注释\n    SHOW FULL "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("COLUMNS")]),s._v(" FROM "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("users")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 正则表达式\n  查找name是以"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'st'")]),s._v("为开头的所有数据：\n  SELECT name FROM person_tbl WHERE name REGEXP "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^st'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". 运算符\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("算术运算符\n      +    加法\n      -    减法\n      *    乘法\n      /    除法 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" / "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.5")]),s._v("\n      DIV   商值，10 DIV "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n      %    或 MOD 取余\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("比较运算符"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("返回 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("， "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，或 NULL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("           等于\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v("        不等于\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           大于\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("           小于\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("          小于\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v("          大于等于\n      BETWEEN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".AND"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".   在两值之间 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v("min"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("max\n      NOT BETWEEN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".AND"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". 不在两值之间\n      IN          在集合中 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),s._v(",3,4,5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      NOT IN        不在集合中 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" not "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),s._v(",3,4,5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("          严格比较两个NULL值是否相等 两个操作码均为NULL时，其所得值为1；而当一个操作码为NULL时，其所得值为0\n      LIKE         模糊匹配\n      REGEXP或RLIKE     正则式匹配\n      IS NULL        为空\n      IS NOT NULL      不为空\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("逻辑运算符\n      NOT 或 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("   非\n      AND      与\n      OR      或\n-------------------------------------------------------------------------------\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 标准SQL语句的分类\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("DDL：Data Define Language 定义数据语言\n     CREATE/DROP/ALTER"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("修改"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("/TRUNCATE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("删除内容、释放空间但不删除定义"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("DML：Data Manipulate Language 操作数据语言\n     INSERT/DELETE/UPDATE\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("DQL：Data Quary Language  查询数据语言\n     SELECT\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("DCL：Data Control Language 控制数据语言\n     GRANT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("授权、管理数据库"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，REVOKE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("收权"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 扩展知识：MySQL中的自增列\n  AUTO_INCREMENT 只能用于整型列的主键上\n  作用：在原来的最大值基础上+1，允许手动赋值，如果设置NULL就会自增。\n\n练习：创03_tedu.sql，创库03_tedu,\n    创表dept"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("did,dname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("  研发部\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" 测试部\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" 运营部\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),s._v(" 市场部\n    创表emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eid,ename,sex,phone,birthday,salary,deptId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    插入15条数据，有一个员工部门为NULL，其中市场部没有员工\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 简单查询\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("查询所有的列：SELECT * FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("查询特定的列：\n     查询所有员工的编号的姓名：SELECT eid,ename FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询所有员工的姓名，性别，工资，生日：SELECT ename,sex,salary,birthday FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("给列取别名："),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AS可省略，引号可省略，但乱码时要set charset gbk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     查询员工的姓名，工资，列名称使用汉字：SELECT ename AS "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'姓名'")]),s._v(", salary AS "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'工资'")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询所有员工的编号，姓名，性别，生日，全部使用中文别名：\n     SELECT eid "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'编号'")]),s._v(",ename "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'姓名'")]),s._v(",sex "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'性别'")]),s._v(",birthday "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'生日'")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     SELECT eid 编号,ename 姓名,sex 性别,birthday 生日 FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("只显示不同的记录"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("合并相同的记录"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     查询哪些部门下有员工"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("员工都在哪些部门"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("？\n     SELECT DISTINCT deptId FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询公司都有哪些性别的员工？\n     SELECT DISTINCT sex FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("在查询时执行计算\n     计算3*4/5+2\n     SELECT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("*4/5+2 AS 结果"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出所有员工的姓名和年薪\n     SELECT ename 姓名, salary*12 年薪 FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     假设每个员工工资增加500，年终奖是5000，查询所有员工的姓名和年薪是多少。\n     SELECT ename 姓名, "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary+500"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("*12+5000 年薪 FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("查询结果集的排序"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORDER BY 后不写ASC/DESC的话，默认为ASC升序"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     查询出所有的部门信息，结果按照部门编号排序\n     SELECT * FROM dept ORDER BY did ASC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#ASC：Ascendent 升序排列")]),s._v("\n     SELECT * FROM dept ORDER BY did DESC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DESC：Descendent 降序排列")]),s._v("\n     查询所有的员工，结果按照工资由低到高排序；\n     SELECT * FROM emp ORDER BY salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询所有的员工，按照年龄排序从小到大；\n     SELECT * FROM emp ORDER BY birthday DESC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询所有的员工，按照姓名升序排列；\n     SELECT * FROM emp ORDER BY ename ASC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     按工资升序排，工资相同则按照姓名升序排。\n     SELECT * FROM emp ORDER BY salary ASC,sex ASC,ename DESC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     按生日升序，相同则按工资降序；\n     SELECT * FROM emp ORDER BY birthday ASC,salary DESC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("条件查询\n     查询出编号为5的员工的所有信息\n      SELECT * FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("eid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出姓名为KING的员工的编号，工资，生日\n      SELECT eid,salary,birthday FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ename")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'KING'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出所有的男员工信息\n      SELECT * FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sex")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出工资大于等于5000的员工信息；\n      SELECT * FROM emp WHERE salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出19910101之后出生的员工信息\n      SELECT * FROM emp WHERE birthday"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19910101")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#也可写'1991-1-1','1991-01-01'，有杠需有引号")]),s._v("\n     查询出不在10号部门的员工信息\n      SELECT * FROM emp WHERE deptId"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出暂时没有部门的员工信息；\n      SELECT * FROM emp WHERE deptId IS NULL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询null只能用is不能用=")]),s._v("\n     查询出有明确部门的员工信息；\n      SELECT * FROM emp WHERE deptId IS NOT NULL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出工资大于6000的女员工的信息；\n      SELECT * FROM emp WHERE salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6000")]),s._v(" AND "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sex")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出工资在5000~5999之间的员工信息；\n      SELECT * FROM emp WHERE salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" AND salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5999")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE salary BETWEEN "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" AND "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5999")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#BETWEEN...AND...用于两者之间的条件")]),s._v("\n     查询出工资小于4000和大于8000的员工信息"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4000")]),s._v(" OR salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE salary NOT BETWEEN "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4000")]),s._v(" AND "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出在1991年出生的员工信息"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE birthday"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19910101")]),s._v(" AND birthday"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19911231")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE birthday BETWEEN "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19910101")]),s._v(" AND "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19911231")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出在1990年之前和1993年之后出生的员工信息"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE birthday"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19900101")]),s._v(" OR birthday"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19931231")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE birthday NOT BETWEEN "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19900101")]),s._v(" AND "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19931231")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出在10号和30号部门的员工信息"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" OR "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE deptId IN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10,30")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#IN(条件1，条件2...)满足任一条件即选出")]),s._v("\n     查询出在10,30,50,80号部门的员工信息"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" OR "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" OR "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v(" OR "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE deptId IN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10,30")]),s._v(",50,80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     查询出不在10和30号部门的员工信息"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE deptId"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" AND deptId"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" OR deptId IS NULL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      SELECT * FROM emp WHERE deptId NOT IN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10,30")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" OR deptId IS NULL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    删除工资在5000~10000之间的员工信息；\n      DELETE FROM emp WHERE salary BETWEEN "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" AND "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("模糊查询"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LIKE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" %代表任意字符\n     查询出姓名中包含字母E的员工信息；\n      SELECT * FROM emp WHERE ename LIKE "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%e%'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# %在前后表示前后都还有字符")]),s._v("\n     查询出姓名以E结尾的员工信息；\n      SELECT * FROM emp WHERE ename LIKE "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%e'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#后面无%表示后面没有字符")]),s._v("\n     查询出姓名中倒数第二个字符是E的员工信息；\n      SELECT * FROM emp WHERE ename LIKE "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%e_'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#_一个字符；__两个；___三个...")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("分页查询----LIMIT\n     分页显示：查询结果集中有太多的记录行，一次显示不完，可以分页显示，\n     不同的数据库有不同的分页查询方式，MySQL分页查询最简单。\n     语法：limit后的两个数不能加引号\n      SELECT * FROM emp LIMIT START,count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#START：是一个数字，表示从结果集中的哪一行开始读取。")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#COUNT：是一个数字，表示读取的最多行数。")]),s._v("\n      假设每一页最多显示4条记录：\n        SELECT * FROM emp LIMIT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第一页")]),s._v("\n        SELECT * FROM emp LIMIT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4,4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第二页")]),s._v("\n        SELECT * FROM emp LIMIT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8,4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第三页")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n      假设每一页最多显示5条记录：\n        SELECT * FROM emp LIMIT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第一页")]),s._v("\n        SELECT * FROM emp LIMIT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5,5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第二页")]),s._v("\n        SELECT * FROM emp LIMIT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10,5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第三页")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n      练习：查询工资最低的5个员工\n        SELECT * FROM emp ORDER BY salary asc LIMIT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      练习：查询男员工中工资最高的五个人\n        SELECT * FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sex")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" ORDER BY salary DESC LIMIT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n综合语法：SELECT "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". FROM tableName WHERE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". ORDER BY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". LIMIT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n          SELECT "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". FROM "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". WHERE "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". GROUP BY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". ORDER BY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". LIMIT "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 复杂查询----聚合查询/分组查询\n  函数：功能体，接收若干个数据，返回特定的计算结果。\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("聚合函数：COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" sum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" avg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" MAX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" MIN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  示例：查询出所有员工的数量\n    SELECT COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    SELECT COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("deptId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#deptId有一行为null，查不到null的行数")]),s._v("\n    SELECT COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#推荐使用")]),s._v("\n  男员工数量：SELECT COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SEX")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  女员工数量：SELECT COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SEX")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  查询出所有员工的工资总和：\n    SELECT SUM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  查询出所有员工的平均工资：\n    SELECT SUM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("/COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    SELECT AVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  查询出工资最高/最低的员工：\n    SELECT MAX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    SELECT MIN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  查询年龄最大/最小的员工：\n    SELECT MIN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("birthday"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    SELECT MAX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("birthday"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("分组查询：GROUP BY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". 只能查询分组的条件和聚合函数。\n  查询出每个部门的员工数量是多少：\n    SELECT deptId,COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",SUM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp GROUP BY deptId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  查询出男女员工的平均工资/最高工资/最低工资：\n    SELECT sex "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'性别'")]),s._v(",SUM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'工资总和'")]),s._v(",AVG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'平均工资'")]),s._v(",\n      Max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'最高工资'")]),s._v(",MIN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'最低工资'")]),s._v(" FROM emp GROUP BY sex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  year"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rowName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 获取rowName日期中的年份\n  month"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rowName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 获取rowName日期中的月份\n  day"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rowName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 获取rowName日期中的天\n  查询出1991年出生的员工：\n  SELECT * FROM emp where YEAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("birthday"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1991")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  查询出3月份出生的员工：\n  SELECT * FROM emp where MONTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("birthday"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  查询出每个月5号生日的员工：\n  SELECT * FROM emp where DAY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("birthday"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("子查询---一个SQL语句的结果作为另一个SQL语句的查询条件。\n  查询出研发部中的所有员工的信息\n    步骤1：查询出研发部的部门编号：\n      SELECT did FROM dept WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dname")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'研发部'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    步骤2：查询出员工表中，部门编号为10的员工\n      SELECT * FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    综合：\n      SELECT * FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SELECT did FROM dept WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dname")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'研发部'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    练习：查询出工资比Tom高的所有员工信息：\n      SELECT * FROM emp WHERE salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SELECT salary FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ename")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    练习：查询出与Tom同一年出生的员工信息：\n      SELECT * FROM emp WHERE year"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("birthday"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SELECT year"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("birthday"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM emp WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ename")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("多表查询\n    查询出所有员工的姓名及其部门名称\n      SELECT ename,dname FROM emp,dept"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#产生笛卡尔积错误")]),s._v("\n    多表查询如何避免笛卡尔积，为查询添加条件\n      SELECT ename,dname FROM emp,dept WHERE "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("did"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    /*上述的语法是SQL-92中的多表查询语法，无法查询出没有部门的员工，\n      也无法查询出没有员工的部门,SQL-99中提出了新的多表查询方法\n    */\n    ①内连接 INNER JOIN tableName ON 条件----和SQL-92的结果一致，不完整。\n      SELECT ename,dname FROM emp INNER JOIN dept ON "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("did"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    ②左外链接 LEFT OUTER JOIN tableName ON 条件\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询结果是左侧所有的记录都显示")]),s._v("\n      SELECT ename,dname FROM emp LEFT OUTER JOIN dept ON "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("did"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#OUTER可省略")]),s._v("\n      SELECT ename,dname FROM emp LEFT JOIN dept ON "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("did"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    ③右外链接 RIGHT OUTER JOIN tableName ON 条件\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询结果是右侧所有的记录都显示，OUTER可省略")]),s._v("\n      SELECT ename,dname FROM emp RIGHT JOIN dept ON "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("did"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    ④全连接 FULL JOIN\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询结果是显示左侧和右侧所有的记录，MySQL不支持。")]),s._v("\n     MySQL的全连接形式：UNION/UNION ALL\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#两个查询结果集中合并相同记录  UNION")]),s._v("\n    SELECT ename,dname FROM emp LEFT OUTER JOIN dept ON "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("did\n    UNION\n    SELECT ename,dname FROM emp RIGHT JOIN dept ON "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("did"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#两个查询结果集中不合并相同记录  UNION ALL")]),s._v("\n    SELECT ename,dname FROM emp LEFT OUTER JOIN dept ON "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("did\n    UNION ALL\n    SELECT ename,dname FROM emp RIGHT JOIN dept ON "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("deptId")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("did"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n课后任务：\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("复习今天内容，把代码删除只保留注释，重新书写SQL语句。\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("创建学子商城数据库\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("预习复杂查询\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("193")]),n("br"),n("span",{staticClass:"line-number"},[s._v("194")]),n("br"),n("span",{staticClass:"line-number"},[s._v("195")]),n("br"),n("span",{staticClass:"line-number"},[s._v("196")]),n("br"),n("span",{staticClass:"line-number"},[s._v("197")]),n("br"),n("span",{staticClass:"line-number"},[s._v("198")]),n("br"),n("span",{staticClass:"line-number"},[s._v("199")]),n("br"),n("span",{staticClass:"line-number"},[s._v("200")]),n("br"),n("span",{staticClass:"line-number"},[s._v("201")]),n("br"),n("span",{staticClass:"line-number"},[s._v("202")]),n("br"),n("span",{staticClass:"line-number"},[s._v("203")]),n("br"),n("span",{staticClass:"line-number"},[s._v("204")]),n("br"),n("span",{staticClass:"line-number"},[s._v("205")]),n("br"),n("span",{staticClass:"line-number"},[s._v("206")]),n("br"),n("span",{staticClass:"line-number"},[s._v("207")]),n("br"),n("span",{staticClass:"line-number"},[s._v("208")]),n("br"),n("span",{staticClass:"line-number"},[s._v("209")]),n("br"),n("span",{staticClass:"line-number"},[s._v("210")]),n("br"),n("span",{staticClass:"line-number"},[s._v("211")]),n("br"),n("span",{staticClass:"line-number"},[s._v("212")]),n("br"),n("span",{staticClass:"line-number"},[s._v("213")]),n("br"),n("span",{staticClass:"line-number"},[s._v("214")]),n("br"),n("span",{staticClass:"line-number"},[s._v("215")]),n("br"),n("span",{staticClass:"line-number"},[s._v("216")]),n("br"),n("span",{staticClass:"line-number"},[s._v("217")]),n("br"),n("span",{staticClass:"line-number"},[s._v("218")]),n("br"),n("span",{staticClass:"line-number"},[s._v("219")]),n("br"),n("span",{staticClass:"line-number"},[s._v("220")]),n("br"),n("span",{staticClass:"line-number"},[s._v("221")]),n("br"),n("span",{staticClass:"line-number"},[s._v("222")]),n("br"),n("span",{staticClass:"line-number"},[s._v("223")]),n("br"),n("span",{staticClass:"line-number"},[s._v("224")]),n("br"),n("span",{staticClass:"line-number"},[s._v("225")]),n("br"),n("span",{staticClass:"line-number"},[s._v("226")]),n("br"),n("span",{staticClass:"line-number"},[s._v("227")]),n("br"),n("span",{staticClass:"line-number"},[s._v("228")]),n("br"),n("span",{staticClass:"line-number"},[s._v("229")]),n("br"),n("span",{staticClass:"line-number"},[s._v("230")]),n("br"),n("span",{staticClass:"line-number"},[s._v("231")]),n("br"),n("span",{staticClass:"line-number"},[s._v("232")]),n("br"),n("span",{staticClass:"line-number"},[s._v("233")]),n("br"),n("span",{staticClass:"line-number"},[s._v("234")]),n("br"),n("span",{staticClass:"line-number"},[s._v("235")]),n("br"),n("span",{staticClass:"line-number"},[s._v("236")]),n("br"),n("span",{staticClass:"line-number"},[s._v("237")]),n("br"),n("span",{staticClass:"line-number"},[s._v("238")]),n("br"),n("span",{staticClass:"line-number"},[s._v("239")]),n("br"),n("span",{staticClass:"line-number"},[s._v("240")]),n("br"),n("span",{staticClass:"line-number"},[s._v("241")]),n("br"),n("span",{staticClass:"line-number"},[s._v("242")]),n("br"),n("span",{staticClass:"line-number"},[s._v("243")]),n("br"),n("span",{staticClass:"line-number"},[s._v("244")]),n("br"),n("span",{staticClass:"line-number"},[s._v("245")]),n("br"),n("span",{staticClass:"line-number"},[s._v("246")]),n("br"),n("span",{staticClass:"line-number"},[s._v("247")]),n("br"),n("span",{staticClass:"line-number"},[s._v("248")]),n("br"),n("span",{staticClass:"line-number"},[s._v("249")]),n("br"),n("span",{staticClass:"line-number"},[s._v("250")]),n("br"),n("span",{staticClass:"line-number"},[s._v("251")]),n("br"),n("span",{staticClass:"line-number"},[s._v("252")]),n("br"),n("span",{staticClass:"line-number"},[s._v("253")]),n("br"),n("span",{staticClass:"line-number"},[s._v("254")]),n("br"),n("span",{staticClass:"line-number"},[s._v("255")]),n("br"),n("span",{staticClass:"line-number"},[s._v("256")]),n("br"),n("span",{staticClass:"line-number"},[s._v("257")]),n("br"),n("span",{staticClass:"line-number"},[s._v("258")]),n("br"),n("span",{staticClass:"line-number"},[s._v("259")]),n("br"),n("span",{staticClass:"line-number"},[s._v("260")]),n("br"),n("span",{staticClass:"line-number"},[s._v("261")]),n("br"),n("span",{staticClass:"line-number"},[s._v("262")]),n("br"),n("span",{staticClass:"line-number"},[s._v("263")]),n("br"),n("span",{staticClass:"line-number"},[s._v("264")]),n("br"),n("span",{staticClass:"line-number"},[s._v("265")]),n("br"),n("span",{staticClass:"line-number"},[s._v("266")]),n("br"),n("span",{staticClass:"line-number"},[s._v("267")]),n("br"),n("span",{staticClass:"line-number"},[s._v("268")]),n("br"),n("span",{staticClass:"line-number"},[s._v("269")]),n("br"),n("span",{staticClass:"line-number"},[s._v("270")]),n("br"),n("span",{staticClass:"line-number"},[s._v("271")]),n("br"),n("span",{staticClass:"line-number"},[s._v("272")]),n("br"),n("span",{staticClass:"line-number"},[s._v("273")]),n("br"),n("span",{staticClass:"line-number"},[s._v("274")]),n("br"),n("span",{staticClass:"line-number"},[s._v("275")]),n("br"),n("span",{staticClass:"line-number"},[s._v("276")]),n("br"),n("span",{staticClass:"line-number"},[s._v("277")]),n("br"),n("span",{staticClass:"line-number"},[s._v("278")]),n("br"),n("span",{staticClass:"line-number"},[s._v("279")]),n("br"),n("span",{staticClass:"line-number"},[s._v("280")]),n("br"),n("span",{staticClass:"line-number"},[s._v("281")]),n("br"),n("span",{staticClass:"line-number"},[s._v("282")]),n("br"),n("span",{staticClass:"line-number"},[s._v("283")]),n("br"),n("span",{staticClass:"line-number"},[s._v("284")]),n("br"),n("span",{staticClass:"line-number"},[s._v("285")]),n("br"),n("span",{staticClass:"line-number"},[s._v("286")]),n("br"),n("span",{staticClass:"line-number"},[s._v("287")]),n("br"),n("span",{staticClass:"line-number"},[s._v("288")]),n("br"),n("span",{staticClass:"line-number"},[s._v("289")]),n("br"),n("span",{staticClass:"line-number"},[s._v("290")]),n("br"),n("span",{staticClass:"line-number"},[s._v("291")]),n("br"),n("span",{staticClass:"line-number"},[s._v("292")]),n("br"),n("span",{staticClass:"line-number"},[s._v("293")]),n("br"),n("span",{staticClass:"line-number"},[s._v("294")]),n("br"),n("span",{staticClass:"line-number"},[s._v("295")]),n("br"),n("span",{staticClass:"line-number"},[s._v("296")]),n("br"),n("span",{staticClass:"line-number"},[s._v("297")]),n("br"),n("span",{staticClass:"line-number"},[s._v("298")]),n("br"),n("span",{staticClass:"line-number"},[s._v("299")]),n("br"),n("span",{staticClass:"line-number"},[s._v("300")]),n("br"),n("span",{staticClass:"line-number"},[s._v("301")]),n("br"),n("span",{staticClass:"line-number"},[s._v("302")]),n("br"),n("span",{staticClass:"line-number"},[s._v("303")]),n("br"),n("span",{staticClass:"line-number"},[s._v("304")]),n("br"),n("span",{staticClass:"line-number"},[s._v("305")]),n("br"),n("span",{staticClass:"line-number"},[s._v("306")]),n("br"),n("span",{staticClass:"line-number"},[s._v("307")]),n("br"),n("span",{staticClass:"line-number"},[s._v("308")]),n("br"),n("span",{staticClass:"line-number"},[s._v("309")]),n("br"),n("span",{staticClass:"line-number"},[s._v("310")]),n("br"),n("span",{staticClass:"line-number"},[s._v("311")]),n("br"),n("span",{staticClass:"line-number"},[s._v("312")]),n("br"),n("span",{staticClass:"line-number"},[s._v("313")]),n("br"),n("span",{staticClass:"line-number"},[s._v("314")]),n("br"),n("span",{staticClass:"line-number"},[s._v("315")]),n("br"),n("span",{staticClass:"line-number"},[s._v("316")]),n("br"),n("span",{staticClass:"line-number"},[s._v("317")]),n("br"),n("span",{staticClass:"line-number"},[s._v("318")]),n("br"),n("span",{staticClass:"line-number"},[s._v("319")]),n("br"),n("span",{staticClass:"line-number"},[s._v("320")]),n("br"),n("span",{staticClass:"line-number"},[s._v("321")]),n("br"),n("span",{staticClass:"line-number"},[s._v("322")]),n("br"),n("span",{staticClass:"line-number"},[s._v("323")]),n("br"),n("span",{staticClass:"line-number"},[s._v("324")]),n("br"),n("span",{staticClass:"line-number"},[s._v("325")]),n("br"),n("span",{staticClass:"line-number"},[s._v("326")]),n("br"),n("span",{staticClass:"line-number"},[s._v("327")]),n("br"),n("span",{staticClass:"line-number"},[s._v("328")]),n("br"),n("span",{staticClass:"line-number"},[s._v("329")]),n("br"),n("span",{staticClass:"line-number"},[s._v("330")]),n("br"),n("span",{staticClass:"line-number"},[s._v("331")]),n("br"),n("span",{staticClass:"line-number"},[s._v("332")]),n("br"),n("span",{staticClass:"line-number"},[s._v("333")]),n("br"),n("span",{staticClass:"line-number"},[s._v("334")]),n("br"),n("span",{staticClass:"line-number"},[s._v("335")]),n("br"),n("span",{staticClass:"line-number"},[s._v("336")]),n("br"),n("span",{staticClass:"line-number"},[s._v("337")]),n("br"),n("span",{staticClass:"line-number"},[s._v("338")]),n("br"),n("span",{staticClass:"line-number"},[s._v("339")]),n("br"),n("span",{staticClass:"line-number"},[s._v("340")]),n("br"),n("span",{staticClass:"line-number"},[s._v("341")]),n("br"),n("span",{staticClass:"line-number"},[s._v("342")]),n("br"),n("span",{staticClass:"line-number"},[s._v("343")]),n("br"),n("span",{staticClass:"line-number"},[s._v("344")]),n("br"),n("span",{staticClass:"line-number"},[s._v("345")]),n("br"),n("span",{staticClass:"line-number"},[s._v("346")]),n("br"),n("span",{staticClass:"line-number"},[s._v("347")]),n("br"),n("span",{staticClass:"line-number"},[s._v("348")]),n("br"),n("span",{staticClass:"line-number"},[s._v("349")]),n("br"),n("span",{staticClass:"line-number"},[s._v("350")]),n("br"),n("span",{staticClass:"line-number"},[s._v("351")]),n("br"),n("span",{staticClass:"line-number"},[s._v("352")]),n("br"),n("span",{staticClass:"line-number"},[s._v("353")]),n("br"),n("span",{staticClass:"line-number"},[s._v("354")]),n("br"),n("span",{staticClass:"line-number"},[s._v("355")]),n("br"),n("span",{staticClass:"line-number"},[s._v("356")]),n("br"),n("span",{staticClass:"line-number"},[s._v("357")]),n("br"),n("span",{staticClass:"line-number"},[s._v("358")]),n("br"),n("span",{staticClass:"line-number"},[s._v("359")]),n("br"),n("span",{staticClass:"line-number"},[s._v("360")]),n("br"),n("span",{staticClass:"line-number"},[s._v("361")]),n("br"),n("span",{staticClass:"line-number"},[s._v("362")]),n("br"),n("span",{staticClass:"line-number"},[s._v("363")]),n("br"),n("span",{staticClass:"line-number"},[s._v("364")]),n("br"),n("span",{staticClass:"line-number"},[s._v("365")]),n("br"),n("span",{staticClass:"line-number"},[s._v("366")]),n("br"),n("span",{staticClass:"line-number"},[s._v("367")]),n("br"),n("span",{staticClass:"line-number"},[s._v("368")]),n("br"),n("span",{staticClass:"line-number"},[s._v("369")]),n("br"),n("span",{staticClass:"line-number"},[s._v("370")]),n("br"),n("span",{staticClass:"line-number"},[s._v("371")]),n("br"),n("span",{staticClass:"line-number"},[s._v("372")]),n("br"),n("span",{staticClass:"line-number"},[s._v("373")]),n("br"),n("span",{staticClass:"line-number"},[s._v("374")]),n("br"),n("span",{staticClass:"line-number"},[s._v("375")]),n("br"),n("span",{staticClass:"line-number"},[s._v("376")]),n("br"),n("span",{staticClass:"line-number"},[s._v("377")]),n("br"),n("span",{staticClass:"line-number"},[s._v("378")]),n("br"),n("span",{staticClass:"line-number"},[s._v("379")]),n("br"),n("span",{staticClass:"line-number"},[s._v("380")]),n("br"),n("span",{staticClass:"line-number"},[s._v("381")]),n("br"),n("span",{staticClass:"line-number"},[s._v("382")]),n("br"),n("span",{staticClass:"line-number"},[s._v("383")]),n("br"),n("span",{staticClass:"line-number"},[s._v("384")]),n("br"),n("span",{staticClass:"line-number"},[s._v("385")]),n("br"),n("span",{staticClass:"line-number"},[s._v("386")]),n("br"),n("span",{staticClass:"line-number"},[s._v("387")]),n("br"),n("span",{staticClass:"line-number"},[s._v("388")]),n("br"),n("span",{staticClass:"line-number"},[s._v("389")]),n("br"),n("span",{staticClass:"line-number"},[s._v("390")]),n("br"),n("span",{staticClass:"line-number"},[s._v("391")]),n("br"),n("span",{staticClass:"line-number"},[s._v("392")]),n("br"),n("span",{staticClass:"line-number"},[s._v("393")]),n("br"),n("span",{staticClass:"line-number"},[s._v("394")]),n("br"),n("span",{staticClass:"line-number"},[s._v("395")]),n("br"),n("span",{staticClass:"line-number"},[s._v("396")]),n("br"),n("span",{staticClass:"line-number"},[s._v("397")]),n("br"),n("span",{staticClass:"line-number"},[s._v("398")]),n("br"),n("span",{staticClass:"line-number"},[s._v("399")]),n("br"),n("span",{staticClass:"line-number"},[s._v("400")]),n("br"),n("span",{staticClass:"line-number"},[s._v("401")]),n("br"),n("span",{staticClass:"line-number"},[s._v("402")]),n("br"),n("span",{staticClass:"line-number"},[s._v("403")]),n("br"),n("span",{staticClass:"line-number"},[s._v("404")]),n("br"),n("span",{staticClass:"line-number"},[s._v("405")]),n("br"),n("span",{staticClass:"line-number"},[s._v("406")]),n("br"),n("span",{staticClass:"line-number"},[s._v("407")]),n("br"),n("span",{staticClass:"line-number"},[s._v("408")]),n("br"),n("span",{staticClass:"line-number"},[s._v("409")]),n("br"),n("span",{staticClass:"line-number"},[s._v("410")]),n("br"),n("span",{staticClass:"line-number"},[s._v("411")]),n("br"),n("span",{staticClass:"line-number"},[s._v("412")]),n("br"),n("span",{staticClass:"line-number"},[s._v("413")]),n("br"),n("span",{staticClass:"line-number"},[s._v("414")]),n("br"),n("span",{staticClass:"line-number"},[s._v("415")]),n("br"),n("span",{staticClass:"line-number"},[s._v("416")]),n("br"),n("span",{staticClass:"line-number"},[s._v("417")]),n("br"),n("span",{staticClass:"line-number"},[s._v("418")]),n("br"),n("span",{staticClass:"line-number"},[s._v("419")]),n("br"),n("span",{staticClass:"line-number"},[s._v("420")]),n("br"),n("span",{staticClass:"line-number"},[s._v("421")]),n("br"),n("span",{staticClass:"line-number"},[s._v("422")]),n("br"),n("span",{staticClass:"line-number"},[s._v("423")]),n("br"),n("span",{staticClass:"line-number"},[s._v("424")]),n("br"),n("span",{staticClass:"line-number"},[s._v("425")]),n("br"),n("span",{staticClass:"line-number"},[s._v("426")]),n("br"),n("span",{staticClass:"line-number"},[s._v("427")]),n("br"),n("span",{staticClass:"line-number"},[s._v("428")]),n("br"),n("span",{staticClass:"line-number"},[s._v("429")]),n("br"),n("span",{staticClass:"line-number"},[s._v("430")]),n("br"),n("span",{staticClass:"line-number"},[s._v("431")]),n("br"),n("span",{staticClass:"line-number"},[s._v("432")]),n("br"),n("span",{staticClass:"line-number"},[s._v("433")]),n("br"),n("span",{staticClass:"line-number"},[s._v("434")]),n("br"),n("span",{staticClass:"line-number"},[s._v("435")]),n("br"),n("span",{staticClass:"line-number"},[s._v("436")]),n("br"),n("span",{staticClass:"line-number"},[s._v("437")]),n("br"),n("span",{staticClass:"line-number"},[s._v("438")]),n("br"),n("span",{staticClass:"line-number"},[s._v("439")]),n("br"),n("span",{staticClass:"line-number"},[s._v("440")]),n("br"),n("span",{staticClass:"line-number"},[s._v("441")]),n("br"),n("span",{staticClass:"line-number"},[s._v("442")]),n("br"),n("span",{staticClass:"line-number"},[s._v("443")]),n("br"),n("span",{staticClass:"line-number"},[s._v("444")]),n("br"),n("span",{staticClass:"line-number"},[s._v("445")]),n("br"),n("span",{staticClass:"line-number"},[s._v("446")]),n("br"),n("span",{staticClass:"line-number"},[s._v("447")]),n("br"),n("span",{staticClass:"line-number"},[s._v("448")]),n("br"),n("span",{staticClass:"line-number"},[s._v("449")]),n("br"),n("span",{staticClass:"line-number"},[s._v("450")]),n("br"),n("span",{staticClass:"line-number"},[s._v("451")]),n("br"),n("span",{staticClass:"line-number"},[s._v("452")]),n("br"),n("span",{staticClass:"line-number"},[s._v("453")]),n("br"),n("span",{staticClass:"line-number"},[s._v("454")]),n("br"),n("span",{staticClass:"line-number"},[s._v("455")]),n("br"),n("span",{staticClass:"line-number"},[s._v("456")]),n("br"),n("span",{staticClass:"line-number"},[s._v("457")]),n("br"),n("span",{staticClass:"line-number"},[s._v("458")]),n("br"),n("span",{staticClass:"line-number"},[s._v("459")]),n("br"),n("span",{staticClass:"line-number"},[s._v("460")]),n("br"),n("span",{staticClass:"line-number"},[s._v("461")]),n("br"),n("span",{staticClass:"line-number"},[s._v("462")]),n("br"),n("span",{staticClass:"line-number"},[s._v("463")]),n("br"),n("span",{staticClass:"line-number"},[s._v("464")]),n("br"),n("span",{staticClass:"line-number"},[s._v("465")]),n("br"),n("span",{staticClass:"line-number"},[s._v("466")]),n("br"),n("span",{staticClass:"line-number"},[s._v("467")]),n("br"),n("span",{staticClass:"line-number"},[s._v("468")]),n("br"),n("span",{staticClass:"line-number"},[s._v("469")]),n("br"),n("span",{staticClass:"line-number"},[s._v("470")]),n("br"),n("span",{staticClass:"line-number"},[s._v("471")]),n("br"),n("span",{staticClass:"line-number"},[s._v("472")]),n("br"),n("span",{staticClass:"line-number"},[s._v("473")]),n("br"),n("span",{staticClass:"line-number"},[s._v("474")]),n("br"),n("span",{staticClass:"line-number"},[s._v("475")]),n("br"),n("span",{staticClass:"line-number"},[s._v("476")]),n("br"),n("span",{staticClass:"line-number"},[s._v("477")]),n("br"),n("span",{staticClass:"line-number"},[s._v("478")]),n("br"),n("span",{staticClass:"line-number"},[s._v("479")]),n("br"),n("span",{staticClass:"line-number"},[s._v("480")]),n("br"),n("span",{staticClass:"line-number"},[s._v("481")]),n("br"),n("span",{staticClass:"line-number"},[s._v("482")]),n("br"),n("span",{staticClass:"line-number"},[s._v("483")]),n("br"),n("span",{staticClass:"line-number"},[s._v("484")]),n("br"),n("span",{staticClass:"line-number"},[s._v("485")]),n("br"),n("span",{staticClass:"line-number"},[s._v("486")]),n("br"),n("span",{staticClass:"line-number"},[s._v("487")]),n("br"),n("span",{staticClass:"line-number"},[s._v("488")]),n("br"),n("span",{staticClass:"line-number"},[s._v("489")]),n("br"),n("span",{staticClass:"line-number"},[s._v("490")]),n("br"),n("span",{staticClass:"line-number"},[s._v("491")]),n("br"),n("span",{staticClass:"line-number"},[s._v("492")]),n("br"),n("span",{staticClass:"line-number"},[s._v("493")]),n("br"),n("span",{staticClass:"line-number"},[s._v("494")]),n("br"),n("span",{staticClass:"line-number"},[s._v("495")]),n("br"),n("span",{staticClass:"line-number"},[s._v("496")]),n("br"),n("span",{staticClass:"line-number"},[s._v("497")]),n("br"),n("span",{staticClass:"line-number"},[s._v("498")]),n("br"),n("span",{staticClass:"line-number"},[s._v("499")]),n("br"),n("span",{staticClass:"line-number"},[s._v("500")]),n("br"),n("span",{staticClass:"line-number"},[s._v("501")]),n("br"),n("span",{staticClass:"line-number"},[s._v("502")]),n("br"),n("span",{staticClass:"line-number"},[s._v("503")]),n("br"),n("span",{staticClass:"line-number"},[s._v("504")]),n("br"),n("span",{staticClass:"line-number"},[s._v("505")]),n("br"),n("span",{staticClass:"line-number"},[s._v("506")]),n("br"),n("span",{staticClass:"line-number"},[s._v("507")]),n("br"),n("span",{staticClass:"line-number"},[s._v("508")]),n("br"),n("span",{staticClass:"line-number"},[s._v("509")]),n("br"),n("span",{staticClass:"line-number"},[s._v("510")]),n("br"),n("span",{staticClass:"line-number"},[s._v("511")]),n("br"),n("span",{staticClass:"line-number"},[s._v("512")]),n("br"),n("span",{staticClass:"line-number"},[s._v("513")]),n("br"),n("span",{staticClass:"line-number"},[s._v("514")]),n("br"),n("span",{staticClass:"line-number"},[s._v("515")]),n("br"),n("span",{staticClass:"line-number"},[s._v("516")]),n("br"),n("span",{staticClass:"line-number"},[s._v("517")]),n("br"),n("span",{staticClass:"line-number"},[s._v("518")]),n("br"),n("span",{staticClass:"line-number"},[s._v("519")]),n("br"),n("span",{staticClass:"line-number"},[s._v("520")]),n("br"),n("span",{staticClass:"line-number"},[s._v("521")]),n("br"),n("span",{staticClass:"line-number"},[s._v("522")]),n("br"),n("span",{staticClass:"line-number"},[s._v("523")]),n("br"),n("span",{staticClass:"line-number"},[s._v("524")]),n("br"),n("span",{staticClass:"line-number"},[s._v("525")]),n("br"),n("span",{staticClass:"line-number"},[s._v("526")]),n("br"),n("span",{staticClass:"line-number"},[s._v("527")]),n("br"),n("span",{staticClass:"line-number"},[s._v("528")]),n("br"),n("span",{staticClass:"line-number"},[s._v("529")]),n("br"),n("span",{staticClass:"line-number"},[s._v("530")]),n("br"),n("span",{staticClass:"line-number"},[s._v("531")]),n("br"),n("span",{staticClass:"line-number"},[s._v("532")]),n("br"),n("span",{staticClass:"line-number"},[s._v("533")]),n("br"),n("span",{staticClass:"line-number"},[s._v("534")]),n("br"),n("span",{staticClass:"line-number"},[s._v("535")]),n("br"),n("span",{staticClass:"line-number"},[s._v("536")]),n("br"),n("span",{staticClass:"line-number"},[s._v("537")]),n("br"),n("span",{staticClass:"line-number"},[s._v("538")]),n("br"),n("span",{staticClass:"line-number"},[s._v("539")]),n("br"),n("span",{staticClass:"line-number"},[s._v("540")]),n("br"),n("span",{staticClass:"line-number"},[s._v("541")]),n("br"),n("span",{staticClass:"line-number"},[s._v("542")]),n("br"),n("span",{staticClass:"line-number"},[s._v("543")]),n("br"),n("span",{staticClass:"line-number"},[s._v("544")]),n("br"),n("span",{staticClass:"line-number"},[s._v("545")]),n("br"),n("span",{staticClass:"line-number"},[s._v("546")]),n("br"),n("span",{staticClass:"line-number"},[s._v("547")]),n("br"),n("span",{staticClass:"line-number"},[s._v("548")]),n("br"),n("span",{staticClass:"line-number"},[s._v("549")]),n("br"),n("span",{staticClass:"line-number"},[s._v("550")]),n("br"),n("span",{staticClass:"line-number"},[s._v("551")]),n("br"),n("span",{staticClass:"line-number"},[s._v("552")]),n("br"),n("span",{staticClass:"line-number"},[s._v("553")]),n("br"),n("span",{staticClass:"line-number"},[s._v("554")]),n("br"),n("span",{staticClass:"line-number"},[s._v("555")]),n("br"),n("span",{staticClass:"line-number"},[s._v("556")]),n("br"),n("span",{staticClass:"line-number"},[s._v("557")]),n("br"),n("span",{staticClass:"line-number"},[s._v("558")]),n("br"),n("span",{staticClass:"line-number"},[s._v("559")]),n("br"),n("span",{staticClass:"line-number"},[s._v("560")]),n("br"),n("span",{staticClass:"line-number"},[s._v("561")]),n("br"),n("span",{staticClass:"line-number"},[s._v("562")]),n("br"),n("span",{staticClass:"line-number"},[s._v("563")]),n("br"),n("span",{staticClass:"line-number"},[s._v("564")]),n("br"),n("span",{staticClass:"line-number"},[s._v("565")]),n("br"),n("span",{staticClass:"line-number"},[s._v("566")]),n("br"),n("span",{staticClass:"line-number"},[s._v("567")]),n("br"),n("span",{staticClass:"line-number"},[s._v("568")]),n("br"),n("span",{staticClass:"line-number"},[s._v("569")]),n("br"),n("span",{staticClass:"line-number"},[s._v("570")]),n("br"),n("span",{staticClass:"line-number"},[s._v("571")]),n("br"),n("span",{staticClass:"line-number"},[s._v("572")]),n("br"),n("span",{staticClass:"line-number"},[s._v("573")]),n("br"),n("span",{staticClass:"line-number"},[s._v("574")]),n("br"),n("span",{staticClass:"line-number"},[s._v("575")]),n("br"),n("span",{staticClass:"line-number"},[s._v("576")]),n("br"),n("span",{staticClass:"line-number"},[s._v("577")]),n("br"),n("span",{staticClass:"line-number"},[s._v("578")]),n("br"),n("span",{staticClass:"line-number"},[s._v("579")]),n("br"),n("span",{staticClass:"line-number"},[s._v("580")]),n("br"),n("span",{staticClass:"line-number"},[s._v("581")]),n("br"),n("span",{staticClass:"line-number"},[s._v("582")]),n("br"),n("span",{staticClass:"line-number"},[s._v("583")]),n("br"),n("span",{staticClass:"line-number"},[s._v("584")]),n("br"),n("span",{staticClass:"line-number"},[s._v("585")]),n("br"),n("span",{staticClass:"line-number"},[s._v("586")]),n("br"),n("span",{staticClass:"line-number"},[s._v("587")]),n("br"),n("span",{staticClass:"line-number"},[s._v("588")]),n("br"),n("span",{staticClass:"line-number"},[s._v("589")]),n("br"),n("span",{staticClass:"line-number"},[s._v("590")]),n("br"),n("span",{staticClass:"line-number"},[s._v("591")]),n("br"),n("span",{staticClass:"line-number"},[s._v("592")]),n("br"),n("span",{staticClass:"line-number"},[s._v("593")]),n("br"),n("span",{staticClass:"line-number"},[s._v("594")]),n("br"),n("span",{staticClass:"line-number"},[s._v("595")]),n("br"),n("span",{staticClass:"line-number"},[s._v("596")]),n("br"),n("span",{staticClass:"line-number"},[s._v("597")]),n("br"),n("span",{staticClass:"line-number"},[s._v("598")]),n("br"),n("span",{staticClass:"line-number"},[s._v("599")]),n("br"),n("span",{staticClass:"line-number"},[s._v("600")]),n("br"),n("span",{staticClass:"line-number"},[s._v("601")]),n("br"),n("span",{staticClass:"line-number"},[s._v("602")]),n("br"),n("span",{staticClass:"line-number"},[s._v("603")]),n("br"),n("span",{staticClass:"line-number"},[s._v("604")]),n("br"),n("span",{staticClass:"line-number"},[s._v("605")]),n("br"),n("span",{staticClass:"line-number"},[s._v("606")]),n("br"),n("span",{staticClass:"line-number"},[s._v("607")]),n("br"),n("span",{staticClass:"line-number"},[s._v("608")]),n("br"),n("span",{staticClass:"line-number"},[s._v("609")]),n("br"),n("span",{staticClass:"line-number"},[s._v("610")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);