(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{223:function(t,e,r){"use strict";r.r(e);var a=r(6),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"padding-border-margin-outline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#padding-border-margin-outline"}},[t._v("#")]),t._v(" "),e("code",[t._v("padding border margin outline")])]),t._v(" "),e("h2",{attrs:{id:"元素宽高-width-height"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元素宽高-width-height"}},[t._v("#")]),t._v(" 元素宽高 "),e("code",[t._v("width / height")])]),t._v(" "),e("h3",{attrs:{id:"width"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#width"}},[t._v("#")]),t._v(" width")]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("<length> | <percentage> | auto")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("auto")])]),t._v(" "),e("p",[t._v("是否继承：否")]),t._v(" "),e("h3",{attrs:{id:"height"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#height"}},[t._v("#")]),t._v(" height")]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("<length> | <percentage> | auto")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("auto")])]),t._v(" "),e("p",[t._v("是否继承：否")]),t._v(" "),e("h2",{attrs:{id:"内边距-padding"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内边距-padding"}},[t._v("#")]),t._v(" 内边距 "),e("code",[t._v("padding")])]),t._v(" "),e("h3",{attrs:{id:"padding"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#padding"}},[t._v("#")]),t._v(" padding")]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <length> | <percentage> ]{1,4}")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("0")])]),t._v(" "),e("p",[t._v("多个值书写顺序为："),e("code",[t._v("padding: top right bottom left;")]),t._v("。")]),t._v(" "),e("ul",[e("li",[t._v("只写一个值，表示上右下左")]),t._v(" "),e("li",[t._v("只写两个值，上下为第一个值，右左为第二个值。")]),t._v(" "),e("li",[t._v("只写三个值，上为第一个值，右左为第二个值，下为第三个值。")])]),t._v(" "),e("p",[t._v("各值分开书写："),e("code",[t._v("padding-top, padding-right, padding-bottom, padding-left")])]),t._v(" "),e("p",[t._v("注意，设置为百分数值的时候，四个方向的 padding 值全都是相对于父元素的宽度计算。")]),t._v(" "),e("h2",{attrs:{id:"边框-border"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#边框-border"}},[t._v("#")]),t._v(" 边框 "),e("code",[t._v("border")])]),t._v(" "),e("h3",{attrs:{id:"边框样式-border-style"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#边框样式-border-style"}},[t._v("#")]),t._v(" 边框样式 "),e("code",[t._v("border-style")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ none | hidden | solid | dotted | dashed | double | groove | ridge | inset | outset ]{1,4}")])]),t._v(" "),e("p",[t._v("默认值：无")]),t._v(" "),e("p",[t._v("多个值书写顺序为："),e("code",[t._v("border-style: top right bottom left;")]),t._v("。")]),t._v(" "),e("p",[t._v("单边样式："),e("code",[t._v("border-top-style, border-right-style, border-bottom-style, border-left-style")]),t._v("，初始值均为 "),e("code",[t._v("none")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"边框宽度-border-width"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#边框宽度-border-width"}},[t._v("#")]),t._v(" 边框宽度 "),e("code",[t._v("border-width")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ thin | medium | thick | <length> ]{1,4}")])]),t._v(" "),e("p",[t._v("默认值：无")]),t._v(" "),e("p",[t._v("多个值书写顺序为："),e("code",[t._v("border-width: top right bottom left;")]),t._v("。")]),t._v(" "),e("p",[t._v("单边样式："),e("code",[t._v("border-top-width, border-right-width, border-bottom-width, border-left-width")]),t._v("，初始值均为 "),e("code",[t._v("medium")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"边框颜色-border-color"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#边框颜色-border-color"}},[t._v("#")]),t._v(" 边框颜色 "),e("code",[t._v("border-color")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("<color>{1,4}")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("currentColor")])]),t._v(" "),e("p",[t._v("多个值书写顺序为："),e("code",[t._v("border-color: top right bottom left;")]),t._v("。")]),t._v(" "),e("p",[t._v("单边样式："),e("code",[t._v("border-top-color, border-right-color, border-bottom-color, border-left-color")]),t._v("，初始值均为元素 "),e("code",[t._v("color")]),t._v(" 值，准确地说是元素 color 的计算值 "),e("code",[t._v("currentColor")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"单边简写属性-border-top-border-right-border-bottom-border-left"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单边简写属性-border-top-border-right-border-bottom-border-left"}},[t._v("#")]),t._v(" 单边简写属性 "),e("code",[t._v("border-top, border-right, border-bottom, border-left")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <border-width> ‖ <border-style> ‖ <border-color> ]")])]),t._v(" "),e("p",[t._v("默认值：无")]),t._v(" "),e("p",[t._v("三个值不分顺序。")]),t._v(" "),e("h3",{attrs:{id:"最简写属性-border"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最简写属性-border"}},[t._v("#")]),t._v(" 最简写属性 "),e("code",[t._v("border")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <border-width> ‖ <border-style> ‖ <border-color> ]")])]),t._v(" "),e("p",[t._v("默认值：同各单独属性")]),t._v(" "),e("p",[t._v("注意，使用 "),e("code",[t._v("box-decoration-break")]),t._v(" 属性可以改变行内元素换行后的边框处理方式。")]),t._v(" "),e("h3",{attrs:{id:"圆角边框-border-radius"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#圆角边框-border-radius"}},[t._v("#")]),t._v(" 圆角边框 "),e("code",[t._v("border-radius")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <length> | <percentage> ]{1,4} [ / [ <length> | <percentage> ]{1,4} ]?")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("0")])]),t._v(" "),e("p",[t._v("设置 "),e("code",[t._v("50%")]),t._v(" 可变为圆形。")]),t._v(" "),e("p",[t._v("设定顺序从左上角开始，顺时针旋转。缺少的值将和 padding 缩写一样，使用对边的值。")]),t._v(" "),e("p",[t._v("设定的百分比就表示要将对应的某一条边的长度弯曲其中的百分之多少。")]),t._v(" "),e("p",[t._v("复杂的圆角，比如想让圆角横向弯曲 30px，纵向弯曲 10px，不能写成 "),e("code",[t._v("border-radius: 30px 10px")]),t._v("。而应该写成 "),e("code",[t._v("border-radius: 30px / 10px")]),t._v("。这就相当于 "),e("code",[t._v("border-radius: 30px 30px 30px 30px / 10px 10px 10px 10px")]),t._v("。斜线之前指定的是圆角的横向半径，斜线之后指定圆角的纵向半径。")]),t._v(" "),e("h3",{attrs:{id:"单独指定一个圆角"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单独指定一个圆角"}},[t._v("#")]),t._v(" 单独指定一个圆角")]),t._v(" "),e("p",[t._v("单写属性："),e("code",[t._v("border-top-left-radius, border-top-right-radius, border-bottomright-radius, border-bottom-left-radius")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <length> | <percentage> ]{1,2}")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("0")])]),t._v(" "),e("p",[t._v("可以设定一个或两个值，两个值的时候，前者表示横向半径，后者表示纵向半径，而不再需要斜线分隔。")]),t._v(" "),e("h3",{attrs:{id:"图像边框-border-image-source"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图像边框-border-image-source"}},[t._v("#")]),t._v(" 图像边框 "),e("code",[t._v("border-image-source")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("none | <image>")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("none")])]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image-source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token url"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("./1.png"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("注意，无论设置普通边框还是图像边框，都需要设置 "),e("code",[t._v("border-style")]),t._v(" 值，否则默认值为 "),e("code",[t._v("none")]),t._v(" 则不会显示边框。")]),t._v(" "),e("p",[t._v("以上属性设置后，指定的图像只会显示在边框的四个角上，原因就在于 "),e("code",[t._v("border-image-slice")]),t._v(" 属性。")]),t._v(" "),e("h3",{attrs:{id:"对用作边框的图片的裁剪方式-border-image-slice"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对用作边框的图片的裁剪方式-border-image-slice"}},[t._v("#")]),t._v(" 对用作边框的图片的裁剪方式 "),e("code",[t._v("border-image-slice")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <number> | <percentage> ]{1,4} && fill?")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("100%")])]),t._v(" "),e("p",[t._v("此属性设置对用作边框的一张图像怎么裁剪，四个值分别指定裁剪图片的多少分别用于左上，右上，右下，左下角。四个值同样可以不写完，取值方式同 padding 省略值时相同。")]),t._v(" "),e("p",[t._v("左上，右上，右下，左下角的大小取决于 "),e("code",[t._v("border-width")]),t._v("。也就是由边框宽度重合部分组成的矩形框大小。")]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image-slice")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 左上，右上，右下，左下均取图片的 100%，也就是四个角都将整张图拿来用 */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image-slice")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 图像将被分成四等份，分别用于 左上，右上，右下，左下  */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("所以默认值 "),e("code",[t._v("100%")]),t._v(" 的话四个角就是完全一样的整张图，但为什么只有四个角呢？")]),t._v(" "),e("p",[t._v("因为规范定义：")]),t._v(" "),e("ul",[e("li",[t._v("如果左右两边（第一个和第三个值）取的宽度之和大于或等于图片本身宽度（100%），那么上边框和下边框的中间就是空的。")]),t._v(" "),e("li",[t._v("如果上下两边（第二个和第四个值）取的宽度之和大于或等于图片本身高度（100%），那么左边框和右边框的中间就是空的。")])]),t._v(" "),e("p",[t._v("如果设定值为纯数字，则表示对应图片的像素数。"),e("code",[t._v("border-image-slice: 25;")]),t._v(" 就表示取 25 像素。")]),t._v(" "),e("p",[t._v("使用纯数字表示，不管图片大小都裁剪相同尺寸，使用百分数，裁剪大小会根据图片尺寸变化。通常使用百分比来指定。")]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image-slice")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 33.33%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 左上，右上，右下，左下都裁剪图片的 33% 用于四角边框，未被裁剪的部分用于填满边框  */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("但上例裁剪后，图片正中间的一部分会消失，既没有用作边框四角，也没有用作边框中间部分，而是直接消失不见。")]),t._v(" "),e("p",[t._v("但在末尾添加 "),e("code",[t._v("fill")]),t._v(" 关键字后，会将中间那一部分会被绘制到元素的背景区域上，其实，它是在元素已有的背景之上绘制，因此可以用来代替（覆盖）现有的背景。")]),t._v(" "),e("p",[t._v("如果想让图像的尺寸不同于 "),e("code",[t._v("border-width")]),t._v(" 的宽度，可使用 "),e("code",[t._v("border-image-width")]),t._v(" 属性。")]),t._v(" "),e("h3",{attrs:{id:"边框图像宽度-border-image-width"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#边框图像宽度-border-image-width"}},[t._v("#")]),t._v(" 边框图像宽度 "),e("code",[t._v("border-image-width")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <length> | <percentage> | <number> | auto ]{1,4}")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("1")])]),t._v(" "),e("p",[t._v("此属性设定边框图像绘制的宽度，默认的边框图像会使用 "),e("code",[t._v("border-width")]),t._v(" 所指定的宽度，设置此属性可让图像绘制的宽度不受 "),e("code",[t._v("border-width")]),t._v(" 的限制，可比 "),e("code",[t._v("border-width")]),t._v(" 值更大或更小。")]),t._v(" "),e("p",[t._v("值为百分数是相对于整个边框的宽或高来计算。")]),t._v(" "),e("p",[t._v("值为纯数字时是 "),e("code",[t._v("border-width")]),t._v(" 的倍数。")]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2px solid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 边框宽度设为 2px */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image-source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token url"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stars.gif"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 12px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 边框图像的宽度设定为 12px */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image-slice")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 33.3333%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 四个角分别裁剪图像的四个角的三分之一大小，填充到 12px 中去 */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("注意，这里即便把 "),e("code",[t._v("border-width")]),t._v(" 的值设置为 "),e("code",[t._v("0")]),t._v(" 也可以通过 "),e("code",[t._v("border-image-width")]),t._v(" 让边框图像显示出来。利用这一点可以把实线边框作为备用样式，以防止边框图像无法加载时，还可以显示普通边框。比如上例中，如果 12px 宽的图像边框无法加载时，将会显示 2px 宽的实线边框。但是注意要留出足够的空间确保图像正常加载时不会与内容重叠。默认情况下是会重叠的，会在下一节介绍解决办法。如果是依靠 padding 来撑开边框，但当边框图像加载失败时，内容和备用边框之间会留出多余的空白。")]),t._v(" "),e("p",[t._v("和 "),e("code",[t._v("border-image-slice")]),t._v(" 的规范类似：")]),t._v(" "),e("ul",[e("li",[t._v("如果左右两边（第一个和第三个值）取的宽度之和大于或等于边框本身宽度（100%），浏览器会按比例减少各值，直到两者值和不大于 100%。")]),t._v(" "),e("li",[t._v("如果上下两边（第二个和第四个值）取的宽度之和大于或等于边框本身高度（100%），浏览器会按比例减少各值，直到两者值和不大于 100%。")])]),t._v(" "),e("p",[t._v("因此，一下两个声明得到的结果一样：")]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25% 80% 25% 40%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 第一个和第三个值满足相加不大于 100% 的要求 */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25% 66.6667% 25% 33.3333%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 第二个和第四个值相加大于 100% ，浏览器会按比例缩小到 100% */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("将值设为 "),e("code",[t._v("auto")]),t._v(" 时，先取 "),e("code",[t._v("border-image-slice")]),t._v(" 的值，没有的话则使用 "),e("code",[t._v("border-width")]),t._v(" 的值。")]),t._v(" "),e("h3",{attrs:{id:"图像边框外推-远离内容区-border-image-outset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图像边框外推-远离内容区-border-image-outset"}},[t._v("#")]),t._v(" 图像边框外推（远离内容区） "),e("code",[t._v("border-image-outset")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <length> | <number> ]{1,4}")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("0")])]),t._v(" "),e("p",[t._v("使用此属性会将图像边框向边框四周往外推。")]),t._v(" "),e("p",[t._v("设为数字值时是相当于 "),e("code",[t._v("border-width")]),t._v(" 的倍数。或设置为固定往外推的长度值。")]),t._v(" "),e("h3",{attrs:{id:"调整图像边框上的图像重复方式-border-image-repeat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调整图像边框上的图像重复方式-border-image-repeat"}},[t._v("#")]),t._v(" 调整图像边框上的图像重复方式 "),e("code",[t._v("border-image-repeat")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ stretch | repeat | round | space ]{1,2}")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("stretch")])]),t._v(" "),e("p",[t._v("默认值表示处四角外的边框上，图像会被拉伸到两端。")]),t._v(" "),e("p",[e("code",[t._v("repeat")]),t._v(" 表示不拉伸，反复平铺图像，从边框中点开始向两端平铺，两端的图像铺满后会被截断。")]),t._v(" "),e("p",[e("code",[t._v("round")]),t._v(" 将各边需要填充的长度除以图片的尺寸，再四舍五入为需要平铺的个数。图片可能会被拉伸或压缩以保证每个图像能相互接触并铺满。")]),t._v(" "),e("p",[e("code",[t._v("space")]),t._v(" 同 round 类似，长度除以图片尺寸后，永远向下取整得到平铺个数，然后将它们均匀分布在长度范围内，不需要相互接触。")]),t._v(" "),e("p",[t._v("截止 2017 年末，Chrome 和 Opera 还不支持使用 "),e("code",[t._v("space")]),t._v(" 方式重复平铺图像。")]),t._v(" "),e("h3",{attrs:{id:"图像边框的简写方式-border-image"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图像边框的简写方式-border-image"}},[t._v("#")]),t._v(" 图像边框的简写方式 "),e("code",[t._v("border-image")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("<border-image-source> ‖ <border-image-slice> [ / <border-image-width> | /<border-image-width>? / <border-image-outset> ]? ‖ <border-image-repeat>")])]),t._v(" "),e("p",[t._v("默认值：同各单独属性相同")]),t._v(" "),e("p",[t._v("slice - width - outset 必须按照指定顺序列出，并使用斜线（"),e("code",[t._v("/")]),t._v("）分隔。source 和 repeat 值可以写在任何位置。")]),t._v(" "),e("h3",{attrs:{id:"实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),e("p",[t._v("略")]),t._v(" "),e("h2",{attrs:{id:"轮廓-outline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#轮廓-outline"}},[t._v("#")]),t._v(" 轮廓 "),e("code",[t._v("outline")])]),t._v(" "),e("p",[t._v("一般直接绘制在 border 外侧，与 border 的区别：")]),t._v(" "),e("ul",[e("li",[t._v("outline 不占空间")]),t._v(" "),e("li",[t._v("outline 可以不是矩形")]),t._v(" "),e("li",[t._v("浏览器通常在元素处于 "),e("code",[t._v(":focus")]),t._v(" 状态时渲染 outline")]),t._v(" "),e("li",[t._v("无法单独为某一边设置独特的样式")])]),t._v(" "),e("h3",{attrs:{id:"轮廓样式-outline-style"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#轮廓样式-outline-style"}},[t._v("#")]),t._v(" 轮廓样式 "),e("code",[t._v("outline-style")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("auto | none | solid | dotted | dashed | double | groove | ridge | inset | outset")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("none")])]),t._v(" "),e("p",[t._v("允许值与 border 相比，少了 "),e("code",[t._v("hidden")]),t._v("，多了 "),e("code",[t._v("auto")]),t._v("。"),e("code",[t._v("auto")]),t._v(" 给浏览器留出了自由权。")]),t._v(" "),e("p",[e("code",[t._v("border-style")]),t._v(" 四条边的简写属性，但 "),e("code",[t._v("outline-style")]),t._v(" 不是，因为CSS只允许统一设置而不允许单独设置一边的 "),e("code",[t._v("outline")]),t._v(" 样式。")]),t._v(" "),e("h3",{attrs:{id:"轮廓宽度-outline-width"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#轮廓宽度-outline-width"}},[t._v("#")]),t._v(" 轮廓宽度 "),e("code",[t._v("outline-width")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("<length> | thin | medium | thick")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("medium")])]),t._v(" "),e("p",[t._v("也不是简写属性，一个值统一设置四边的样式。")]),t._v(" "),e("h3",{attrs:{id:"轮廓颜色-outline-color"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#轮廓颜色-outline-color"}},[t._v("#")]),t._v(" 轮廓颜色 "),e("code",[t._v("outline-color")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("<color> | invert")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("invert")])]),t._v(" "),e("p",[t._v("默认值表示对轮廓可见部分中的所有像素进行颜色转换。")]),t._v(" "),e("p",[t._v("截止 2017 年只有 Microsoft Edge 和 IE11 支持 "),e("code",[t._v("invert")]),t._v(" 值，其他多数浏览器将其当做错误，转而使用默认颜色也就是元素的 color 属性值。")]),t._v(" "),e("h3",{attrs:{id:"轮廓简写属性-outline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#轮廓简写属性-outline"}},[t._v("#")]),t._v(" 轮廓简写属性 "),e("code",[t._v("outline")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <outline-color> ‖ <outline-style> ‖ <outline-width> ]")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("none")])]),t._v(" "),e("p",[t._v("同时设置 outline 的颜色，样式，宽度，依然不分顺序。")]),t._v(" "),e("h3",{attrs:{id:"outline-与-border-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#outline-与-border-的区别"}},[t._v("#")]),t._v(" outline 与 border 的区别")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("outline 对布局完全不会有影响，只是视觉上的效果。")])]),t._v(" "),e("li",[e("p",[t._v("轮廓不一定是矩形，比如在换行后，轮廓会连成一个多边形来包裹这个换行的元素。")])])]),t._v(" "),e("p",[t._v("截止 2017 年末，部分浏览器不支持连成多边形，而依然是每一行连成一个矩形。")]),t._v(" "),e("h2",{attrs:{id:"外边距-margin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外边距-margin"}},[t._v("#")]),t._v(" 外边距 "),e("code",[t._v("margin")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("[ <length> | <percentage> | auto ]{1,4}")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("-")])]),t._v(" "),e("p",[t._v("百分数依据父元素内容区的宽度计算。四个值和 padding 一样表示 上右下左。")]),t._v(" "),e("p",[t._v("本身默认是没有外边距的，但多数浏览器会自动为元素预设外边距，但只要手动声明了就会覆盖默认的样式。")]),t._v(" "),e("h3",{attrs:{id:"单独设置一边的外边距-margin-top-margin-right-margin-bottom-margin-left"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单独设置一边的外边距-margin-top-margin-right-margin-bottom-margin-left"}},[t._v("#")]),t._v(" 单独设置一边的外边距 "),e("code",[t._v("margin-top, margin-right, margin-bottom, margin-left")])]),t._v(" "),e("p",[t._v("允许值："),e("code",[t._v("<length> | <percentage> | auto")])]),t._v(" "),e("p",[t._v("默认值："),e("code",[t._v("0")])]),t._v(" "),e("h3",{attrs:{id:"外边距折叠-合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外边距折叠-合并"}},[t._v("#")]),t._v(" 外边距折叠（合并）")]),t._v(" "),e("p",[t._v("块级框的上下外边距碰在一起会发生合并，并取其中较大值作为最终值。")]),t._v(" "),e("p",[t._v("还有一种情况，当元素是父元素的第一个元素时，为这个子元素设置 "),e("code",[t._v("margin-top")]),t._v(" 会将父元素带走：")]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #aaa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-top")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("对行内非置换元素而言，上下 margin 不会产生任何影响。左右 margin 则会正常生效。")]),t._v(" "),e("p",[t._v("对行内置换元素而言，则均会生效。")])])}),[],!1,null,null,null);e.default=s.exports}}]);