(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{249:function(s,t,a){"use strict";a.r(t);var e=a(6),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"代码回滚"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码回滚"}},[s._v("#")]),s._v(" 代码回滚")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#场景一-仅在工作区做了修改"}},[s._v("场景一: 仅在工作区做了修改")])]),t("li",[t("a",{attrs:{href:"#场景二-已添加-add-到暂存区中"}},[s._v("场景二: 已添加(add)到暂存区中")])]),t("li",[t("a",{attrs:{href:"#场景三-已提交-commit-但还没有-push"}},[s._v("场景三: 已提交(commit), 但还没有 push")])]),t("li",[t("a",{attrs:{href:"#场景四-已提交-commit-但还没有-push-想修改最后一次-commit"}},[s._v("场景四：已提交(commit), 但还没有 push, 想修改最后一次 commit")])]),t("li",[t("a",{attrs:{href:"#已-push-的修改"}},[s._v("已 push 的修改")])])])]),t("p"),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://help.coding.net/insight/posts/bb30f4f8/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git 代码回滚与找回的艺术"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"场景一-仅在工作区做了修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景一-仅在工作区做了修改"}},[s._v("#")]),s._v(" 场景一: 仅在工作区做了修改")]),s._v(" "),t("p",[s._v("此时做的修改，仅仅是在工作区进行了修改，还没有执行添加到暂存区操作("),t("code",[s._v("git add")]),s._v(")，也就更不可能执行了提交操作("),t("code",[s._v("git commit")]),s._v(")。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 注意，文件名前有 双短横线")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("文件"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如，撤回对 main.js 文件的修改")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- main.js\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("需要注意的是，这些改动因为从来没有提交到 Git 仓库中过，Git 无法追踪其历史版本，一旦回滚就相当于直接丢弃这些修改了。")]),s._v(" "),t("p",[s._v("场景：刚 clone 或 pull 了代码到本地，对一个文件做了一些修改，但发现这些修改不想要了，想恢复到 clone 时的状态，此时就可以对这个文件执行 "),t("code",[s._v("git checkout")]),s._v(" 。")]),s._v(" "),t("h2",{attrs:{id:"场景二-已添加-add-到暂存区中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景二-已添加-add-到暂存区中"}},[s._v("#")]),s._v(" 场景二: 已添加(add)到暂存区中")]),s._v(" "),t("p",[s._v("当修改已经添加(git add)到暂存区中，但还没有执行提交 (git commit) 时，可以通过 reset 来进行回滚：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("文件"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("执行后，只是将文件修改从暂存区移回到工作区，修改还依然存在，如果要确认放弃修改的内容，可执行场景一的操作。")]),s._v(" "),t("h2",{attrs:{id:"场景三-已提交-commit-但还没有-push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景三-已提交-commit-但还没有-push"}},[s._v("#")]),s._v(" 场景三: 已提交(commit), 但还没有 push")]),s._v(" "),t("p",[s._v("已提交修改到本地的 Git 仓库，但是还没有推送到远程仓库时：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将当前工作区回滚到某一次 commit 之后，并将回滚的所有文件修改保留在工作区")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --hard 表示不保留修改内容到工作区，直接回滚到某一次 commit 之后的状态")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"场景四-已提交-commit-但还没有-push-想修改最后一次-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景四-已提交-commit-但还没有-push-想修改最后一次-commit"}},[s._v("#")]),s._v(" 场景四：已提交(commit), 但还没有 push, 想修改最后一次 commit")]),s._v(" "),t("p",[s._v("当 commit 之后，还没有 push 到远程的时候，发现刚才的修改还需要优化，如果直接修改后再次 add 并 commit 的话，就会多生成一次 commit 记录。但我们只想要一次提交记录。")]),s._v(" "),t("p",[s._v("方式一：就像场景三中一样，将刚才不完美的 commit 先通过 reset 撤回，等修改完善之后再一次性进行提交。")]),s._v(" "),t("p",[s._v("方式二：commit 时合并到最后一次提交中，修改内容会合并，并且提交说明会覆盖最后一次的提交说明。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --amend 表示完善提交记录，将本次的修改合并到最后一次 commit 中，并且以本次的 commit message 为准")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--amend")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-message"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"已-push-的修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#已-push-的修改"}},[s._v("#")]),s._v(" 已 push 的修改")]),s._v(" "),t("p",[s._v("对于任何一次已经 push 到远程的 commit 提交记录，都不能用 "),t("code",[s._v("git reset <commit>")]),s._v(" 来执行，因为 reset 会丢弃指定的 commit 之后的所有 commit，这样修改之后再 push 的话会和远程仓库造成冲突。")]),s._v(" "),t("p",[s._v("比如，假设当前本地和远程均有 a, b, c, d 四次提交记录，在本地执行 "),t("code",[s._v("reset b")]),s._v(" 之后，做出一些修改，然后 add 并 commit 生成提交记录 e , c 和 d 就会被丢弃，此时本地的提交记录就只有 a, b, e, 而远程仓库的提交记录是 a, b, c, d, 这样本地和远程仓库的提交记录不一致，就会造成冲突，无法 push 到远程。")]),s._v(" "),t("p",[s._v("所以，针对已经 push 到远程的提交记录，不能使用 "),t("code",[s._v("git reset")]),s._v(" 来执行回滚操作，而是应该使用 "),t("code",[s._v("git revert")]),s._v(" 来完成。")]),s._v(" "),t("p",[t("code",[s._v("git revert")]),s._v(" 会将某一次指定的 commit 作为新的提交，还是以上面的例子为例，本地和远程均有 a, b, c, d 提交记录，"),t("code",[s._v("revert b")]),s._v(" 之后，会将 b 的修改内容添加到暂存区，提交后会生成新的提交记录 e，此时本地的提交记录为 a, b, c, d, e, 远程为 a, b, c, d, 没有冲突，可以直接 push 到远程。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 版本恢复时，不要直接进行提交，可以先进行编辑再进行提交")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" revert "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 版本恢复时，直接先将指定的提交记录作为一次新的提交")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" revert "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);